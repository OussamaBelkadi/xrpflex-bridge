{
  "swagger": "2.0",
  "info": {
    "version": "4",
    "title": "DefaultExtended/23.200.001"
  },
  "host": "xrp-flex-partners.cegid.cloud",
  "basePath": "/lebeltechnologies_23r2/entity/DefaultExtended/23.200.001",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/$adHocSchema": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Account_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Account/{ids}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Account_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Account_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Account_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Account_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Account/{actionName}": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Account_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Account/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Account_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Account_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Account_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "AccountDetailsForPeriodInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{ids}": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountDetailsForPeriodInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountDetailsForPeriodInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{id}": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "AccountDetailsForPeriodInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "AccountDetailsForPeriodInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{actionName}": {
      "post": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "AccountDetailsForPeriodInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "AccountDetailsForPeriodInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "AccountDetailsForPeriodInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "AccountDetailsForPeriodInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup/$adHocSchema": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "AccountGroup_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup/{ids}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountGroup_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountGroup_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup/{id}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "AccountGroup_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "AccountGroup_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup/{actionName}": {
      "post": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "AccountGroup_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroupCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "AccountGroup_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountGroup": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "AccountGroup_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountGroup"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "AccountGroup_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "AccountSummaryInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{ids}": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountSummaryInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "AccountSummaryInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{id}": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "AccountSummaryInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "AccountSummaryInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{actionName}": {
      "post": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "AccountSummaryInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "AccountSummaryInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "AccountSummaryInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountSummaryInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "AccountSummaryInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AccountSummaryInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/$adHocSchema": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Activity_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/{ids}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Activity_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Activity_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Activity_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Activity_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/CompleteActivity": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Activity_InvokeAction_CompleteActivity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteActivity",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/{actionName}": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Activity_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Activity_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Activity_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Activity_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/$adHocSchema": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Appointment_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/{ids}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Appointment_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Appointment_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Appointment_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Appointment_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/CancelAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_CancelAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/CloseAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_CloseAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloseAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/CompleteAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_CompleteAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/InvoiceAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_InvoiceAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/AppRecalcExternalTax": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_AppRecalcExternalTax",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppRecalcExternalTax",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/PauseAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_PauseAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PauseAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/ReopenAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_ReopenAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReopenAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/StartAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_StartAppointment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartAppointment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/ResumeAppointmentMenuActions": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_ResumeAppointmentMenuActions",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResumeAppointmentMenuActions",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/UncloseAppointmentMenuActions": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_UncloseAppointmentMenuActions",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UncloseAppointmentMenuActions",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/{actionName}": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Appointment_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Appointment_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Appointment_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Appointment"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Appointment_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition/$adHocSchema": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "AttributeDefinition_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition/{ids}": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "AttributeDefinition_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "AttributeDefinition_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition/{id}": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "AttributeDefinition_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "AttributeDefinition_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition/{actionName}": {
      "post": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "AttributeDefinition_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttributeDefinitionCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "AttributeDefinition_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/AttributeDefinition": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "AttributeDefinition_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinition"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "AttributeDefinition_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/AttributeDefinition"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores/$adHocSchema": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "BigCommerceStores_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores/{ids}": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "BigCommerceStores_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "BigCommerceStores_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores/{id}": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "BigCommerceStores_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "BigCommerceStores_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores/{actionName}": {
      "post": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BigCommerceStores_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BigCommerceStoresCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "BigCommerceStores_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BigCommerceStores": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "BigCommerceStores_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BigCommerceStores"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "BigCommerceStores_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BigCommerceStores"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/$adHocSchema": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Bill_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/{ids}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Bill_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bill"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Bill_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/{id}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Bill_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bill"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Bill_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/ReleaseBill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Bill_InvokeAction_ReleaseBill",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseBill",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/ReleaseRetainage": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Bill_InvokeAction_ReleaseRetainage",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseRetainage",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/ReverseBill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Bill_InvokeAction_ReverseBill",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReverseBill",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/{actionName}": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Bill_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Bill"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Bill_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Bill": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Bill_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bill"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bill"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Bill_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget/$adHocSchema": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Budget_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget/{ids}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Budget_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Budget_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget/{id}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Budget_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Budget_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget/{actionName}": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Budget_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Budget_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Budget": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Budget_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Budget"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Budget_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/$adHocSchema": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "BusinessAccount_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/{ids}": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "BusinessAccount_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "BusinessAccount_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/{id}": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "BusinessAccount_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "BusinessAccount_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/ConvertBusinessAccountToCustomer": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_ConvertBusinessAccountToCustomer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertBusinessAccountToCustomer",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/MarkBusinessAccountAsValidated": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_MarkBusinessAccountAsValidated",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkBusinessAccountAsValidated",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/ValidateBusinessAccountAddresses": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_ValidateBusinessAccountAddresses",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateBusinessAccountAddresses",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/ChangeBusinessAccountID": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_ChangeBusinessAccountID",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeBusinessAccountID",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/CheckForBusinessAccountDuplicates": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_CheckForBusinessAccountDuplicates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckForBusinessAccountDuplicates",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/CreateContactFromBusinessAccount": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_CreateContactFromBusinessAccount",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactFromBusinessAccount",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/{actionName}": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "BusinessAccount_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessAccountCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "BusinessAccount_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/BusinessAccount": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "BusinessAccount_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccount"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "BusinessAccount_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/BusinessAccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier/$adHocSchema": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Carrier_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier/{ids}": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Carrier_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Carrier"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Carrier_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier/{id}": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Carrier_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Carrier"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Carrier_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier/{actionName}": {
      "post": {
        "tags": [
          "Carrier"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Carrier_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarrierCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Carrier"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Carrier_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Carrier": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Carrier_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Carrier"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Carrier"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Carrier_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Carrier"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/$adHocSchema": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Case_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/{ids}": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Case_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Case_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/{id}": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Case_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Case_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/ReleaseCase": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Case_InvokeAction_ReleaseCase",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseCase",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/AssignCase": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Case_InvokeAction_AssignCase",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignCase",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/{actionName}": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Case_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaseCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Case"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Case_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Case": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Case_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Case"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Case_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/$adHocSchema": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CashSale_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/{ids}": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CashSale_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashSale"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CashSale_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/{id}": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CashSale_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashSale"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CashSale_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/ReleaseCashSale": {
      "post": {
        "tags": [
          "CashSale"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CashSale_InvokeAction_ReleaseCashSale",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseCashSale",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/{actionName}": {
      "post": {
        "tags": [
          "CashSale"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CashSale_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashSaleCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CashSale"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CashSale_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CashSale": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CashSale_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashSale"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CashSale"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CashSale_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CashSale"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/$adHocSchema": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ChangeOrder_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/{ids}": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ChangeOrder_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ChangeOrder_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/{id}": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ChangeOrder_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ChangeOrder_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/ReleaseChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_ReleaseChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/ApproveChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_ApproveChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/RejectChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_RejectChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/EmailChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_EmailChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/ReverseChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_ReverseChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReverseChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/HoldChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_HoldChangeOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HoldChangeOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/RemoveChangeOrderFromHold": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_RemoveChangeOrderFromHold",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveChangeOrderFromHold",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/{actionName}": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrder_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeOrderCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ChangeOrder_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrder": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ChangeOrder_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeOrder"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ChangeOrder_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass/$adHocSchema": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ChangeOrderClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{ids}": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ChangeOrderClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ChangeOrderClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{id}": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ChangeOrderClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ChangeOrderClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{actionName}": {
      "post": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ChangeOrderClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeOrderClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ChangeOrderClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ChangeOrderClass": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ChangeOrderClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeOrderClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ChangeOrderClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ChangeOrderClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/$adHocSchema": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Check_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/{ids}": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Check_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Check"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Check_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/{id}": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Check_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Check"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Check_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/ReleaseCheck": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Check_InvokeAction_ReleaseCheck",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseCheck",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/VoidCheck": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Check_InvokeAction_VoidCheck",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoidCheck",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/{actionName}": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Check_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Check"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Check_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Check": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Check_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Check"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Check"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Check_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure/$adHocSchema": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CompaniesStructure_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure/{ids}": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CompaniesStructure_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CompaniesStructure_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure/{id}": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CompaniesStructure_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CompaniesStructure_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure/{actionName}": {
      "post": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CompaniesStructure_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompaniesStructureCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CompaniesStructure_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompaniesStructure": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CompaniesStructure_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompaniesStructure"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CompaniesStructure_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CompaniesStructure"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CompanyFinancialPeriod_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{ids}": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CompanyFinancialPeriod_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CompanyFinancialPeriod_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{id}": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CompanyFinancialPeriod_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CompanyFinancialPeriod_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{actionName}": {
      "post": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CompanyFinancialPeriod_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriodCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CompanyFinancialPeriod_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CompanyFinancialPeriod_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyFinancialPeriod"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CompanyFinancialPeriod_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CompanyFinancialPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/$adHocSchema": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Contact_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/{ids}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Contact_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Contact_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Contact_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Contact_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/CheckForContactDuplicates": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Contact_InvokeAction_CheckForContactDuplicates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckForContactDuplicates",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/MarkContactAsValidated": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Contact_InvokeAction_MarkContactAsValidated",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkContactAsValidated",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/ValidateContactAddress": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Contact_InvokeAction_ValidateContactAddress",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateContactAddress",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/CreateAccountFromContact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Contact_InvokeAction_CreateAccountFromContact",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountFromContact",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/{actionName}": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Contact_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Contact_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Contact_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Contact_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage/$adHocSchema": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ContractUsage_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage/{ids}": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ContractUsage_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ContractUsage_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage/{id}": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ContractUsage_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ContractUsage_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage/{actionName}": {
      "post": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ContractUsage_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractUsageCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ContractUsage_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ContractUsage": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ContractUsage_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractUsage"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ContractUsage_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ContractUsage"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/$adHocSchema": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CostCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/{ids}": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CostCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CostCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/{id}": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CostCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CostCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/ChangeCostCodeID": {
      "post": {
        "tags": [
          "CostCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CostCode_InvokeAction_ChangeCostCodeID",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeCostCodeID",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/{actionName}": {
      "post": {
        "tags": [
          "CostCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CostCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CostCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CostCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CostCode": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CostCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CostCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CostCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency/$adHocSchema": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Currency_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency/{ids}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Currency_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Currency_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Currency_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Currency_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency/{actionName}": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Currency_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Currency_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Currency_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Currency"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Currency_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/$adHocSchema": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Customer_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/{ids}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Customer_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Customer_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Customer_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Customer_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/CreateContactFromCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Customer_InvokeAction_CreateContactFromCustomer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactFromCustomer",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/{actionName}": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Customer_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Customer_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Customer_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Customer_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CustomerClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass/{ids}": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass/{id}": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CustomerClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CustomerClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass/{actionName}": {
      "post": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CustomerClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CustomerClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerClass": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CustomerClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CustomerClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CustomerLocation_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation/{ids}": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerLocation_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerLocation_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation/{id}": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CustomerLocation_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CustomerLocation_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation/{actionName}": {
      "post": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CustomerLocation_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLocationCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CustomerLocation_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerLocation": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CustomerLocation_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerLocation"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CustomerLocation_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerLocation"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CustomerPaymentMethod_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{ids}": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerPaymentMethod_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerPaymentMethod_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{id}": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CustomerPaymentMethod_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CustomerPaymentMethod_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{actionName}": {
      "post": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CustomerPaymentMethod_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethodCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CustomerPaymentMethod_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CustomerPaymentMethod_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPaymentMethod"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CustomerPaymentMethod_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerPaymentMethod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "CustomerPriceClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{ids}": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerPriceClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "CustomerPriceClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{id}": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "CustomerPriceClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "CustomerPriceClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{actionName}": {
      "post": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "CustomerPriceClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPriceClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "CustomerPriceClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/CustomerPriceClass": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "CustomerPriceClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPriceClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "CustomerPriceClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/CustomerPriceClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/$adHocSchema": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "DeductionBenefitCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{ids}": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "DeductionBenefitCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "DeductionBenefitCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{id}": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "DeductionBenefitCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "DeductionBenefitCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{actionName}": {
      "post": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "DeductionBenefitCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "DeductionBenefitCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DeductionBenefitCode": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "DeductionBenefitCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeductionBenefitCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "DeductionBenefitCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/DeductionBenefitCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/$adHocSchema": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Discount_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/{ids}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Discount_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Discount_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/{id}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Discount_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Discount_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/UpdateDiscounts": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Discount_InvokeAction_UpdateDiscounts",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDiscounts",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/{actionName}": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Discount_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscountCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Discount_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Discount": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Discount_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Discount"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Discount_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode/$adHocSchema": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "DiscountCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode/{ids}": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "DiscountCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "DiscountCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode/{id}": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "DiscountCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "DiscountCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode/{actionName}": {
      "post": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "DiscountCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscountCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "DiscountCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/DiscountCode": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "DiscountCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "DiscountCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode/$adHocSchema": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "EarningTypeCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode/{ids}": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "EarningTypeCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "EarningTypeCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode/{id}": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "EarningTypeCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "EarningTypeCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode/{actionName}": {
      "post": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EarningTypeCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningTypeCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "EarningTypeCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EarningTypeCode": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "EarningTypeCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningTypeCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "EarningTypeCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EarningTypeCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/$adHocSchema": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Email_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/{ids}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Email_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Email_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/{id}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Email_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Email_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/SendEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_SendEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateContactFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateContactFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateEventFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateEventFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEventFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateLeadFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateLeadFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLeadFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateOpportunityFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateOpportunityFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOpportunityFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateExpenseReceiptFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateExpenseReceiptFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExpenseReceiptFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateCaseFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateCaseFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCaseFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CreateTaskFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CreateTaskFromEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTaskFromEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/RestoreDeletedEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_RestoreDeletedEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDeletedEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/RestoreArchivedEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_RestoreArchivedEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreArchivedEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/ProcessEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_ProcessEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/CancelSendingEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CancelSendingEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelSendingEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/ArchiveEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_ArchiveEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArchiveEmail",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/{actionName}": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Email_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Email_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Email": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Email_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Email_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/$adHocSchema": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "EmailProcessing_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/{ids}": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "EmailProcessing_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "EmailProcessing_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/{id}": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "EmailProcessing_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "EmailProcessing_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/ProcessEmailProcessing": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmailProcessing_InvokeAction_ProcessEmailProcessing",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessEmailProcessing",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/ProcessAllEmailProcessing": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmailProcessing_InvokeAction_ProcessAllEmailProcessing",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessAllEmailProcessing",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/{actionName}": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmailProcessing_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailProcessingCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "EmailProcessing_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmailProcessing": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "EmailProcessing_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmailProcessing"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "EmailProcessing_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmailProcessing"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/$adHocSchema": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Employee_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/{ids}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Employee_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Employee_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Employee_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Employee_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/ChangeEmployeeID": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Employee_InvokeAction_ChangeEmployeeID",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeEmployeeID",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/{actionName}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Employee_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Employee_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Employee_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Employee"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Employee_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/$adHocSchema": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "EmployeePayrollClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{ids}": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "EmployeePayrollClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "EmployeePayrollClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{id}": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "EmployeePayrollClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "EmployeePayrollClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{actionName}": {
      "post": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmployeePayrollClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "EmployeePayrollClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollClass": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "EmployeePayrollClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePayrollClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "EmployeePayrollClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/$adHocSchema": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "EmployeePayrollSettings_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{ids}": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "EmployeePayrollSettings_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "EmployeePayrollSettings_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{id}": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "EmployeePayrollSettings_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "EmployeePayrollSettings_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/ImportEmployeeTaxes": {
      "post": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmployeePayrollSettings_InvokeAction_ImportEmployeeTaxes",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportEmployeeTaxes",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{actionName}": {
      "post": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "EmployeePayrollSettings_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettingsCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "EmployeePayrollSettings_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "EmployeePayrollSettings_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePayrollSettings"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "EmployeePayrollSettings_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/EmployeePayrollSettings"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/$adHocSchema": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Event_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/{ids}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Event_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Event_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Event_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Event_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/AcceptInvitationEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_AcceptInvitationEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/CancelActivityEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_CancelActivityEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelActivityEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/CompleteEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_CompleteEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/ExportCardEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_ExportCardEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportCardEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/RejectInvitationEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_RejectInvitationEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectInvitationEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/InviteAllEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_InviteAllEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteAllEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/InviteEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_InviteEvent",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteEvent",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/{actionName}": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Event_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Event_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Event_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Event_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/$adHocSchema": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ExpenseClaim_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/{ids}": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ExpenseClaim_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ExpenseClaim_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/{id}": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ExpenseClaim_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ExpenseClaim_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/ApproveExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_ApproveExpenseClaim",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveExpenseClaim",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/RejectExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_RejectExpenseClaim",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectExpenseClaim",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/SubmitExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_SubmitExpenseClaim",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitExpenseClaim",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/ReleaseExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_ReleaseExpenseClaim",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseExpenseClaim",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/PutOnHoldExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_PutOnHoldExpenseClaim",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutOnHoldExpenseClaim",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/{actionName}": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseClaim_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseClaimCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ExpenseClaim_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseClaim": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ExpenseClaim_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseClaim"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ExpenseClaim_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseClaim"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ExpenseReceipt_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{ids}": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ExpenseReceipt_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ExpenseReceipt_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{id}": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ExpenseReceipt_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ExpenseReceipt_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/SubmitExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_SubmitExpenseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitExpenseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/ApproveExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_ApproveExpenseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveExpenseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/RejectExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_RejectExpenseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectExpenseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/PutOnHoldExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_PutOnHoldExpenseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutOnHoldExpenseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/ClaimExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_ClaimExpenseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimExpenseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{actionName}": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExpenseReceipt_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseReceiptCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ExpenseReceipt_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExpenseReceipt": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ExpenseReceipt_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseReceipt"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ExpenseReceipt_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExpenseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment/$adHocSchema": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ExternalCommitment_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment/{ids}": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ExternalCommitment_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ExternalCommitment_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment/{id}": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ExternalCommitment_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ExternalCommitment_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment/{actionName}": {
      "post": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ExternalCommitment_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalCommitmentCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ExternalCommitment_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ExternalCommitment": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ExternalCommitment_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCommitment"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ExternalCommitment_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ExternalCommitment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "FinancialPeriod_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod/{ids}": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "FinancialPeriod_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "FinancialPeriod_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod/{id}": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "FinancialPeriod_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "FinancialPeriod_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod/{actionName}": {
      "post": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "FinancialPeriod_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialPeriodCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "FinancialPeriod_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialPeriod": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "FinancialPeriod_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancialPeriod"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "FinancialPeriod_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FinancialPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear/$adHocSchema": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "FinancialYear_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear/{ids}": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "FinancialYear_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "FinancialYear_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear/{id}": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "FinancialYear_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "FinancialYear_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear/{actionName}": {
      "post": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "FinancialYear_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialYearCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "FinancialYear_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FinancialYear": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "FinancialYear_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancialYear"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "FinancialYear_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint/$adHocSchema": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "FOBPoint_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint/{ids}": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "FOBPoint_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "FOBPoint_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint/{id}": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "FOBPoint_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "FOBPoint_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint/{actionName}": {
      "post": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "FOBPoint_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FOBPointCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "FOBPoint_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/FOBPoint": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "FOBPoint_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FOBPoint"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "FOBPoint_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/FOBPoint"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventoryAdjustment_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{ids}": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryAdjustment_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryAdjustment_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{id}": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventoryAdjustment_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventoryAdjustment_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/ReleaseAdjustment": {
      "post": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryAdjustment_InvokeAction_ReleaseAdjustment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseAdjustment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{actionName}": {
      "post": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryAdjustment_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryAdjustmentCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventoryAdjustment_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAdjustment": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventoryAdjustment_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryAdjustment"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventoryAdjustment_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryAdjustment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventoryAllocationInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{ids}": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryAllocationInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryAllocationInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{id}": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventoryAllocationInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventoryAllocationInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{actionName}": {
      "post": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryAllocationInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventoryAllocationInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventoryAllocationInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryAllocationInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventoryAllocationInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryAllocationInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventoryIssue_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/{ids}": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryIssue_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryIssue_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/{id}": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventoryIssue_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventoryIssue_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/ReleaseInventoryIssue": {
      "post": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryIssue_InvokeAction_ReleaseInventoryIssue",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseInventoryIssue",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/{actionName}": {
      "post": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryIssue_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryIssueCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventoryIssue_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryIssue": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventoryIssue_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryIssue"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventoryIssue_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryIssue"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventoryQuantityAvailable_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{ids}": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryQuantityAvailable_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryQuantityAvailable_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{id}": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventoryQuantityAvailable_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventoryQuantityAvailable_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{actionName}": {
      "post": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryQuantityAvailable_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailableCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventoryQuantityAvailable_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventoryQuantityAvailable_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryQuantityAvailable"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventoryQuantityAvailable_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryQuantityAvailable"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventoryReceipt_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/{ids}": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryReceipt_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventoryReceipt_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/{id}": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventoryReceipt_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventoryReceipt_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/ReleaseInventoryReceipt": {
      "post": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryReceipt_InvokeAction_ReleaseInventoryReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseInventoryReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/{actionName}": {
      "post": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventoryReceipt_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryReceiptCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventoryReceipt_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventoryReceipt": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventoryReceipt_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryReceipt"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventoryReceipt_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventoryReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "InventorySummaryInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{ids}": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "InventorySummaryInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "InventorySummaryInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{id}": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "InventorySummaryInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "InventorySummaryInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{actionName}": {
      "post": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "InventorySummaryInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "InventorySummaryInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "InventorySummaryInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventorySummaryInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "InventorySummaryInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/InventorySummaryInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/$adHocSchema": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Invoice_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/{ids}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Invoice_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Invoice_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Invoice_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Invoice_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/ReleaseInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Invoice_InvokeAction_ReleaseInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/{actionName}": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Invoice_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Invoice_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Invoice_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Invoice"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Invoice_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass/$adHocSchema": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ItemClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass/{ids}": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass/{id}": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ItemClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ItemClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass/{actionName}": {
      "post": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ItemClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ItemClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemClass": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ItemClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ItemClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory/$adHocSchema": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ItemSalesCategory_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{ids}": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemSalesCategory_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemSalesCategory_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{id}": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ItemSalesCategory_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ItemSalesCategory_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{actionName}": {
      "post": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ItemSalesCategory_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemSalesCategoryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ItemSalesCategory_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemSalesCategory": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ItemSalesCategory_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemSalesCategory"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ItemSalesCategory_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemSalesCategory"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse/$adHocSchema": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ItemWarehouse_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse/{ids}": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemWarehouse_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ItemWarehouse_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse/{id}": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ItemWarehouse_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ItemWarehouse_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse/{actionName}": {
      "post": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ItemWarehouse_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemWarehouseCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ItemWarehouse_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ItemWarehouse": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ItemWarehouse_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemWarehouse"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ItemWarehouse_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ItemWarehouse"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "JournalTransaction_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/{ids}": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "JournalTransaction_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "JournalTransaction_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/{id}": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "JournalTransaction_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "JournalTransaction_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/ReleaseJournalTransaction": {
      "post": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "JournalTransaction_InvokeAction_ReleaseJournalTransaction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseJournalTransaction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/{actionName}": {
      "post": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "JournalTransaction_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalTransactionCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "JournalTransaction_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/JournalTransaction": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "JournalTransaction_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JournalTransaction"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "JournalTransaction_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/JournalTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/$adHocSchema": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "KitAssembly_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/{ids}": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "KitAssembly_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "KitAssembly_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/{id}": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "KitAssembly_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "KitAssembly_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/ReleaseKitAssembly": {
      "post": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "KitAssembly_InvokeAction_ReleaseKitAssembly",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseKitAssembly",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/{actionName}": {
      "post": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "KitAssembly_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KitAssemblyCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "KitAssembly_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitAssembly": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "KitAssembly_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitAssembly"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "KitAssembly_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/KitAssembly"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification/$adHocSchema": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "KitSpecification_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification/{ids}": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "KitSpecification_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "KitSpecification_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification/{id}": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "KitSpecification_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "KitSpecification_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification/{actionName}": {
      "post": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "KitSpecification_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KitSpecificationCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "KitSpecification_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/KitSpecification": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "KitSpecification_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitSpecification"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "KitSpecification_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/KitSpecification"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate/$adHocSchema": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "LaborCostRate_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate/{ids}": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "LaborCostRate_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "LaborCostRate_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate/{id}": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "LaborCostRate_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "LaborCostRate_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate/{actionName}": {
      "post": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "LaborCostRate_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LaborCostRateCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "LaborCostRate_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LaborCostRate": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "LaborCostRate_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LaborCostRate"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "LaborCostRate_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/LaborCostRate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/$adHocSchema": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Lead_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/{ids}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Lead_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Lead_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Lead_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Lead_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/CheckLeadForDuplicates": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_CheckLeadForDuplicates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckLeadForDuplicates",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToBAccount": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_ConvertLeadToBAccount",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertLeadToBAccount",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToContact": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_ConvertLeadToContact",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertLeadToContact",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToOpportunity": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_ConvertLeadToOpportunity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertLeadToOpportunity",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/ValidateLeadAddress": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_ValidateLeadAddress",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateLeadAddress",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/MarkLeadAsValidated": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_MarkLeadAsValidated",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkLeadAsValidated",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/{actionName}": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Lead_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LeadCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Lead_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Lead": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Lead_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Lead"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Lead_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger/$adHocSchema": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Ledger_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger/{ids}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Ledger_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ledger"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Ledger_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger/{id}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Ledger_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ledger"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Ledger_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger/{actionName}": {
      "post": {
        "tags": [
          "Ledger"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Ledger_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LedgerCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Ledger"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Ledger_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Ledger": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Ledger_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ledger"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ledger"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Ledger_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Ledger"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass/$adHocSchema": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "LotSerialClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass/{ids}": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "LotSerialClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "LotSerialClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass/{id}": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "LotSerialClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "LotSerialClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass/{actionName}": {
      "post": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "LotSerialClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LotSerialClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "LotSerialClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/LotSerialClass": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "LotSerialClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LotSerialClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "LotSerialClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/LotSerialClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/$adHocSchema": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "NonStockItem_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/{ids}": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "NonStockItem_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "NonStockItem_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/{id}": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "NonStockItem_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "NonStockItem_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/UpdateStandardCostNonStockItem": {
      "post": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "NonStockItem_InvokeAction_UpdateStandardCostNonStockItem",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStandardCostNonStockItem",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/{actionName}": {
      "post": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "NonStockItem_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NonStockItemCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "NonStockItem_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/NonStockItem": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "NonStockItem_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonStockItem"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "NonStockItem_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/NonStockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/$adHocSchema": {
      "get": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ODFournisseurs_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/{ids}": {
      "get": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ODFournisseurs_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ODFournisseurs_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/{id}": {
      "get": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ODFournisseurs_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ODFournisseurs_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/Release": {
      "post": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ODFournisseurs_InvokeAction_Release",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Release",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/{actionName}": {
      "post": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ODFournisseurs_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ODFournisseursCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ODFournisseurs_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ODFournisseurs": {
      "get": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ODFournisseurs_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ODFournisseurs"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ODFournisseurs"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ODFournisseurs_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ODFournisseurs"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/$adHocSchema": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Opportunity_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/{ids}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Opportunity_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Opportunity_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Opportunity_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Opportunity_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/CreateContactFromOpportunity": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Opportunity_InvokeAction_CreateContactFromOpportunity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactFromOpportunity",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/CreateOpportunityInvoice": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Opportunity_InvokeAction_CreateOpportunityInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOpportunityInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/CreateOpportunitySalesOrder": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Opportunity_InvokeAction_CreateOpportunitySalesOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOpportunitySalesOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/CreateAccountFromOpportunity": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Opportunity_InvokeAction_CreateAccountFromOpportunity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountFromOpportunity",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/{actionName}": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Opportunity_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpportunityCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Opportunity_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Opportunity": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Opportunity_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Opportunity"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Opportunity_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Opportunity"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup/$adHocSchema": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PayGroup_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup/{ids}": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PayGroup_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PayGroup_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup/{id}": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PayGroup_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PayGroup_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup/{actionName}": {
      "post": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayGroup_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayGroupCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PayGroup_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayGroup": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PayGroup_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayGroup"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PayGroup_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayGroup"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/$adHocSchema": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Payment_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/{ids}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Payment_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Payment_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Payment_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Payment_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/CaptureCreditCardPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_CaptureCreditCardPayment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaptureCreditCardPayment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/ReleasePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_ReleasePayment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleasePayment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/VoidPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_VoidPayment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoidPayment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/VoidCardPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_VoidCardPayment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoidCardPayment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/CardOperation": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_CardOperation",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardOperation",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/{actionName}": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Payment_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Payment_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Payment_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Payment"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Payment_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod/$adHocSchema": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PaymentMethod_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod/{ids}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PaymentMethod_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PaymentMethod_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod/{id}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PaymentMethod_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PaymentMethod_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod/{actionName}": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PaymentMethod_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethodCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PaymentMethod_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PaymentMethod": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PaymentMethod_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PaymentMethod_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PayPeriod_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod/{ids}": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PayPeriod_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PayPeriod_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod/{id}": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PayPeriod_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PayPeriod_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod/{actionName}": {
      "post": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayPeriod_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayPeriodCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PayPeriod_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayPeriod": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PayPeriod_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayPeriod"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PayPeriod_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayPeriod"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PayrollBatch_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/{ids}": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollBatch_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollBatch_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/{id}": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PayrollBatch_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PayrollBatch_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/ReleaseBatch": {
      "post": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayrollBatch_InvokeAction_ReleaseBatch",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseBatch",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/{actionName}": {
      "post": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayrollBatch_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollBatchCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PayrollBatch_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollBatch": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PayrollBatch_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayrollBatch"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PayrollBatch_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollBatch"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PayrollUnionLocal_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{ids}": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollUnionLocal_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollUnionLocal_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{id}": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PayrollUnionLocal_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PayrollUnionLocal_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{actionName}": {
      "post": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayrollUnionLocal_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocalCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PayrollUnionLocal_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollUnionLocal": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PayrollUnionLocal_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayrollUnionLocal"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PayrollUnionLocal_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollUnionLocal"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PayrollWCCCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{ids}": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollWCCCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PayrollWCCCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{id}": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PayrollWCCCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PayrollWCCCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{actionName}": {
      "post": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PayrollWCCCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollWCCCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PayrollWCCCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PayrollWCCCode": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PayrollWCCCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayrollWCCCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PayrollWCCCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PayrollWCCCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/$adHocSchema": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PhysicalInventoryCount_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{ids}": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PhysicalInventoryCount_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PhysicalInventoryCount_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{id}": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PhysicalInventoryCount_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PhysicalInventoryCount_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{actionName}": {
      "post": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PhysicalInventoryCount_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCountCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PhysicalInventoryCount_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PhysicalInventoryCount_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhysicalInventoryCount"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PhysicalInventoryCount_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryCount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/$adHocSchema": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PhysicalInventoryReview_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{ids}": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PhysicalInventoryReview_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PhysicalInventoryReview_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{id}": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PhysicalInventoryReview_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PhysicalInventoryReview_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/CancelPhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CancelPhysicalInventory",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelPhysicalInventory",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/CompletePhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CompletePhysicalInventory",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompletePhysicalInventory",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/FinishCountingPhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PhysicalInventoryReview_InvokeAction_FinishCountingPhysicalInventory",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinishCountingPhysicalInventory",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{actionName}": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReviewCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PhysicalInventoryReview_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PhysicalInventoryReview_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhysicalInventoryReview"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PhysicalInventoryReview_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PhysicalInventoryReview"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/$adHocSchema": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProFormaInvoice_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{ids}": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProFormaInvoice_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProFormaInvoice_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{id}": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProFormaInvoice_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProFormaInvoice_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/ReleaseProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_ReleaseProFormaInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseProFormaInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/ApproveProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_ApproveProFormaInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveProFormaInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/RejectProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_RejectProFormaInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectProFormaInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/EmailProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_EmailProFormaInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailProFormaInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/HoldProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_HoldProFormaInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HoldProFormaInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/RemoveProFormaInvoiceFromHold": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_RemoveProFormaInvoiceFromHold",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveProFormaInvoiceFromHold",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{actionName}": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProFormaInvoice_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProFormaInvoiceCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProFormaInvoice_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProFormaInvoice": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProFormaInvoice_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProFormaInvoice"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProFormaInvoice_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProFormaInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/$adHocSchema": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Project_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/{ids}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Project_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Project_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Project_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Project_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/RunProjectAllocation": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_RunProjectAllocation",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunProjectAllocation",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/ValidateProjectBalance": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_ValidateProjectBalance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateProjectBalance",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/RunProjectBilling": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_RunProjectBilling",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunProjectBilling",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/ApproveProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_ApproveProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/RejectProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_RejectProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/LockProjectBudget": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_LockProjectBudget",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LockProjectBudget",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/UnlockProjectBudget": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_UnlockProjectBudget",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockProjectBudget",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/LockProjectCommitments": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_LockProjectCommitments",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LockProjectCommitments",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/UnlockProjectCommitments": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_UnlockProjectCommitments",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockProjectCommitments",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/ChangeProjectID": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_ChangeProjectID",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeProjectID",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/ActivateProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_ActivateProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/HoldProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_HoldProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HoldProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/CompleteProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_CompleteProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/SuspendProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_SuspendProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuspendProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/CancelProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_CancelProject",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelProject",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/{actionName}": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Project_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Project_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Project_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Project_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProjectBudget_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget/{ids}": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectBudget_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectBudget_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget/{id}": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProjectBudget_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProjectBudget_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget/{actionName}": {
      "post": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectBudget_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectBudgetCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProjectBudget_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectBudget": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProjectBudget_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectBudget"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProjectBudget_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProjectTask_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/{ids}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTask_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTask_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/{id}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProjectTask_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProjectTask_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/ActivateProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTask_InvokeAction_ActivateProjectTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateProjectTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/CompleteProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTask_InvokeAction_CompleteProjectTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteProjectTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/CancelProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTask_InvokeAction_CancelProjectTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelProjectTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/HoldProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTask_InvokeAction_HoldProjectTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HoldProjectTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/{actionName}": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTask_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTaskCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProjectTask_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTask": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProjectTask_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTask"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProjectTask_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProjectTemplate_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/{ids}": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTemplate_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTemplate_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/{id}": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProjectTemplate_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProjectTemplate_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/ActivateProjectTemplate": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTemplate_InvokeAction_ActivateProjectTemplate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateProjectTemplate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/HoldProjectTemplate": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTemplate_InvokeAction_HoldProjectTemplate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HoldProjectTemplate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/{actionName}": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTemplate_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplateCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProjectTemplate_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplate": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProjectTemplate_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplate"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProjectTemplate_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProjectTemplateTask_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{ids}": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTemplateTask_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTemplateTask_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{id}": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProjectTemplateTask_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProjectTemplateTask_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{actionName}": {
      "post": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTemplateTask_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTaskCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProjectTemplateTask_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTemplateTask": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProjectTemplateTask_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplateTask"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProjectTemplateTask_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateTask"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ProjectTransaction_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/{ids}": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTransaction_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ProjectTransaction_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/{id}": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ProjectTransaction_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ProjectTransaction_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/ReleaseTransactions": {
      "post": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTransaction_InvokeAction_ReleaseTransactions",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseTransactions",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/{actionName}": {
      "post": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ProjectTransaction_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTransactionCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ProjectTransaction_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ProjectTransaction": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ProjectTransaction_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTransaction"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ProjectTransaction_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ProjectTransaction"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank/$adHocSchema": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PTOBank_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank/{ids}": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PTOBank_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PTOBank_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank/{id}": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PTOBank_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PTOBank_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank/{actionName}": {
      "post": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PTOBank_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PTOBankCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PTOBank_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PTOBank": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PTOBank_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PTOBank"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PTOBank_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PTOBank"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder/$adHocSchema": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PurchaseOrder_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder/{ids}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PurchaseOrder_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PurchaseOrder_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PurchaseOrder_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PurchaseOrder_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder/{actionName}": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PurchaseOrder_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseOrderCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PurchaseOrder_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseOrder": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PurchaseOrder_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseOrder"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PurchaseOrder_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "PurchaseReceipt_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{ids}": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "PurchaseReceipt_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "PurchaseReceipt_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{id}": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "PurchaseReceipt_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "PurchaseReceipt_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/ReleasePurchaseReceipt": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PurchaseReceipt_InvokeAction_ReleasePurchaseReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleasePurchaseReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/CreateAPBill": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PurchaseReceipt_InvokeAction_CreateAPBill",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAPBill",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{actionName}": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "PurchaseReceipt_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseReceiptCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "PurchaseReceipt_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/PurchaseReceipt": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "PurchaseReceipt_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseReceipt"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "PurchaseReceipt_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/PurchaseReceipt"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/$adHocSchema": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "SalesInvoice_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/{ids}": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesInvoice_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesInvoice_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/{id}": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "SalesInvoice_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "SalesInvoice_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/ReleaseSalesInvoice": {
      "post": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesInvoice_InvokeAction_ReleaseSalesInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseSalesInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/{actionName}": {
      "post": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesInvoice_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesInvoiceCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "SalesInvoice_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesInvoice": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "SalesInvoice_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoice"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "SalesInvoice_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesInvoice"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/$adHocSchema": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "SalesOrder_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/{ids}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesOrder_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesOrder_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/{id}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "SalesOrder_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "SalesOrder_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/CancelSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_CancelSalesOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelSalesOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/ReopenSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_ReopenSalesOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReopenSalesOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/PrepareSalesInvoice": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_PrepareSalesInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrepareSalesInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/OpenSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_OpenSalesOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenSalesOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/ReleaseFromCreditHoldSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_ReleaseFromCreditHoldSalesOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseFromCreditHoldSalesOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/SalesOrderCreateReceipt": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_SalesOrderCreateReceipt",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderCreateReceipt",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/SalesOrderCreateShipment": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_SalesOrderCreateShipment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderCreateShipment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/AutoRecalculateDiscounts": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_AutoRecalculateDiscounts",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoRecalculateDiscounts",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/{actionName}": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesOrder_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "SalesOrder_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesOrder": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "SalesOrder_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrder"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "SalesOrder_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson/$adHocSchema": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Salesperson_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson/{ids}": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Salesperson_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Salesperson_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson/{id}": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Salesperson_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Salesperson_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson/{actionName}": {
      "post": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Salesperson_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalespersonCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Salesperson_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Salesperson": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Salesperson_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Salesperson"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Salesperson_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "SalesPricesInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{ids}": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesPricesInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesPricesInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{id}": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "SalesPricesInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "SalesPricesInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{actionName}": {
      "post": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesPricesInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "SalesPricesInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPricesInquiry": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "SalesPricesInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesPricesInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "SalesPricesInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesPricesInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/$adHocSchema": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "SalesPriceWorksheet_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{ids}": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesPriceWorksheet_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "SalesPriceWorksheet_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{id}": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "SalesPriceWorksheet_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "SalesPriceWorksheet_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/ReleaseSalesPriceWorksheet": {
      "post": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesPriceWorksheet_InvokeAction_ReleaseSalesPriceWorksheet",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseSalesPriceWorksheet",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{actionName}": {
      "post": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "SalesPriceWorksheet_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheetCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "SalesPriceWorksheet_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "SalesPriceWorksheet_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesPriceWorksheet"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "SalesPriceWorksheet_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/SalesPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/$adHocSchema": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ServiceOrder_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/{ids}": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ServiceOrder_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ServiceOrder_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/{id}": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ServiceOrder_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ServiceOrder_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/CompleteOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_CompleteOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/CancelOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_CancelOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/ReopenOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_ReopenOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReopenOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/CloseOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_CloseOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloseOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/UncloseOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_UncloseOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UncloseOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/InvoiceOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_InvoiceOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/AllowBilling": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_AllowBilling",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllowBilling",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/RecalcExternalTax": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_RecalcExternalTax",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecalcExternalTax",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/{actionName}": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ServiceOrder_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ServiceOrder_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ServiceOrder": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ServiceOrder_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceOrder"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ServiceOrder_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/$adHocSchema": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Shipment_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/{ids}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Shipment_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shipment"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Shipment_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Shipment_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shipment"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Shipment_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/ConfirmShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Shipment_InvokeAction_ConfirmShipment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmShipment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/CorrectShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Shipment_InvokeAction_CorrectShipment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrectShipment",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/UpdateIN": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Shipment_InvokeAction_UpdateIN",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateIN",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/PrepareInvoice": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Shipment_InvokeAction_PrepareInvoice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrepareInvoice",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/{actionName}": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Shipment_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Shipment"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Shipment_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Shipment": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Shipment_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Shipment"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shipment"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Shipment_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ShippingBox_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox/{ids}": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingBox_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingBox_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox/{id}": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ShippingBox_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ShippingBox_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox/{actionName}": {
      "post": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ShippingBox_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingBoxCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ShippingBox_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingBox": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ShippingBox_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingBox"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ShippingBox_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingBox"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ShippingTerm_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm/{ids}": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingTerm_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingTerm_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm/{id}": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ShippingTerm_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ShippingTerm_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm/{actionName}": {
      "post": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ShippingTerm_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingTermCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ShippingTerm_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingTerm": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ShippingTerm_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingTerm"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ShippingTerm_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingTerm"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ShippingZones_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones/{ids}": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingZones_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ShippingZones_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones/{id}": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ShippingZones_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ShippingZones_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones/{actionName}": {
      "post": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ShippingZones_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingZonesCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ShippingZones_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShippingZones": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ShippingZones_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingZones"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ShippingZones_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShippingZones"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia/$adHocSchema": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ShipVia_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia/{ids}": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ShipVia_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ShipVia_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia/{id}": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ShipVia_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ShipVia_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia/{actionName}": {
      "post": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ShipVia_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipViaCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ShipVia_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShipVia": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ShipVia_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipVia"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ShipVia_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShipVia"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore/$adHocSchema": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "ShopifyStore_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore/{ids}": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "ShopifyStore_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "ShopifyStore_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore/{id}": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "ShopifyStore_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "ShopifyStore_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore/{actionName}": {
      "post": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "ShopifyStore_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShopifyStoreCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "ShopifyStore_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/ShopifyStore": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "ShopifyStore_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShopifyStore"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "ShopifyStore_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/ShopifyStore"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle/$adHocSchema": {
      "get": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "StatementCycle_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle/{ids}": {
      "get": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "StatementCycle_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "StatementCycle_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle/{id}": {
      "get": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "StatementCycle_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "StatementCycle_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle/{actionName}": {
      "post": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "StatementCycle_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatementCycleCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "StatementCycle_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StatementCycle": {
      "get": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "StatementCycle_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatementCycle"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StatementCycle"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "StatementCycle_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StatementCycle"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/$adHocSchema": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "StockItem_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/{ids}": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "StockItem_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StockItem"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "StockItem_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/{id}": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "StockItem_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StockItem"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "StockItem_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/UpdateStandardCostStockItem": {
      "post": {
        "tags": [
          "StockItem"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "StockItem_InvokeAction_UpdateStandardCostStockItem",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStandardCostStockItem",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/{actionName}": {
      "post": {
        "tags": [
          "StockItem"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "StockItem_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StockItemCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StockItem"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "StockItem_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StockItem": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "StockItem_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItem"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StockItem"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "StockItem_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StockItem"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "StorageDetailsByLocationInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{ids}": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "StorageDetailsByLocationInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "StorageDetailsByLocationInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{id}": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "StorageDetailsByLocationInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "StorageDetailsByLocationInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{actionName}": {
      "post": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "StorageDetailsByLocationInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "StorageDetailsByLocationInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "StorageDetailsByLocationInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageDetailsByLocationInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "StorageDetailsByLocationInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsByLocationInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "StorageDetailsInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{ids}": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "StorageDetailsInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "StorageDetailsInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{id}": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "StorageDetailsInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "StorageDetailsInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{actionName}": {
      "post": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "StorageDetailsInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "StorageDetailsInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "StorageDetailsInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageDetailsInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "StorageDetailsInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/StorageDetailsInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount/$adHocSchema": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Subaccount_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount/{ids}": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Subaccount_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Subaccount_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount/{id}": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Subaccount_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Subaccount_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount/{actionName}": {
      "post": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Subaccount_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubaccountCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Subaccount_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subaccount": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Subaccount_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subaccount"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Subaccount_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subaccount"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/$adHocSchema": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Subcontract_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/{ids}": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Subcontract_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Subcontract_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/{id}": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Subcontract_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Subcontract_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/ReleaseFromHold": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Subcontract_InvokeAction_ReleaseFromHold",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseFromHold",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/PutOnHold": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Subcontract_InvokeAction_PutOnHold",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutOnHold",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/{actionName}": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Subcontract_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubcontractCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Subcontract_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Subcontract": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Subcontract_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subcontract"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Subcontract_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Subcontract"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/$adHocSchema": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Task_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/{ids}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Task_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Task_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Task_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Task_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/CompleteTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Task_InvokeAction_CompleteTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/CancelActivityTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Task_InvokeAction_CancelActivityTask",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelActivityTask",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/{actionName}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Task_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Task_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Task_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Task_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax/$adHocSchema": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Tax_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax/{ids}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Tax_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Tax_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax/{id}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Tax_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Tax_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax/{actionName}": {
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Tax_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Tax_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Tax": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Tax_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tax"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Tax_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Tax"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory/$adHocSchema": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TaxCategory_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory/{ids}": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxCategory_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxCategory_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory/{id}": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TaxCategory_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TaxCategory_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory/{actionName}": {
      "post": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TaxCategory_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxCategoryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TaxCategory_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxCategory": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TaxCategory_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCategory"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TaxCategory_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings/$adHocSchema": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TaxReportingSettings_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{ids}": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxReportingSettings_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxReportingSettings_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{id}": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TaxReportingSettings_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TaxReportingSettings_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{actionName}": {
      "post": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TaxReportingSettings_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxReportingSettingsCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TaxReportingSettings_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxReportingSettings": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TaxReportingSettings_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxReportingSettings"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TaxReportingSettings_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxReportingSettings"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone/$adHocSchema": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TaxZone_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone/{ids}": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxZone_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TaxZone_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone/{id}": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TaxZone_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TaxZone_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone/{actionName}": {
      "post": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TaxZone_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxZoneCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TaxZone_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TaxZone": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TaxZone_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxZone"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TaxZone_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TaxZone"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems/$adHocSchema": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TemplateItems_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems/{ids}": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TemplateItems_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TemplateItems_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems/{id}": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TemplateItems_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TemplateItems_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems/{actionName}": {
      "post": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TemplateItems_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateItemsCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TemplateItems_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TemplateItems": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TemplateItems_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateItems"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TemplateItems_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TemplateItems"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/$adHocSchema": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TimeEntry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/{ids}": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TimeEntry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TimeEntry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/{id}": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TimeEntry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TimeEntry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/CompleteTimeEntry": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TimeEntry_InvokeAction_CompleteTimeEntry",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteTimeEntry",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/OpenTimeEntry": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TimeEntry_InvokeAction_OpenTimeEntry",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenTimeEntry",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/{actionName}": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TimeEntry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeEntryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TimeEntry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TimeEntry": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TimeEntry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeEntry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TimeEntry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TimeEntry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/$adHocSchema": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "TransferOrder_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/{ids}": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "TransferOrder_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "TransferOrder_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/{id}": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "TransferOrder_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "TransferOrder_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/ReleaseTransferOrder": {
      "post": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TransferOrder_InvokeAction_ReleaseTransferOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseTransferOrder",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/{actionName}": {
      "post": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "TransferOrder_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferOrderCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "TransferOrder_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/TransferOrder": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "TransferOrder_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransferOrder"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "TransferOrder_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/TransferOrder"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal/$adHocSchema": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "UnionLocal_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal/{ids}": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "UnionLocal_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "UnionLocal_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal/{id}": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "UnionLocal_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "UnionLocal_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal/{actionName}": {
      "post": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "UnionLocal_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnionLocalCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "UnionLocal_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnionLocal": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "UnionLocal_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnionLocal"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "UnionLocal_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/UnionLocal"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/$adHocSchema": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "UnitsOfMeasure_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{ids}": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "UnitsOfMeasure_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "UnitsOfMeasure_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{id}": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "UnitsOfMeasure_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "UnitsOfMeasure_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{actionName}": {
      "post": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "UnitsOfMeasure_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasureCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "UnitsOfMeasure_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/UnitsOfMeasure": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "UnitsOfMeasure_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnitsOfMeasure"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "UnitsOfMeasure_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/UnitsOfMeasure"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/$adHocSchema": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Vendor_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/{ids}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Vendor_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Vendor_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Vendor_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Vendor_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/CreateContactFromVendor": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Vendor_InvokeAction_CreateContactFromVendor",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactFromVendor",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/{actionName}": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Vendor_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Vendor_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Vendor": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Vendor_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vendor"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Vendor_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass/$adHocSchema": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "VendorClass_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass/{ids}": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorClass_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorClass_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass/{id}": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "VendorClass_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "VendorClass_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass/{actionName}": {
      "post": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "VendorClass_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorClassCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "VendorClass_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorClass": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "VendorClass_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorClass"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "VendorClass_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorClass"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "VendorPricesInquiry_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{ids}": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorPricesInquiry_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorPricesInquiry_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{id}": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "VendorPricesInquiry_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "VendorPricesInquiry_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{actionName}": {
      "post": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "VendorPricesInquiry_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiryCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "VendorPricesInquiry_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPricesInquiry": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "VendorPricesInquiry_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorPricesInquiry"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "VendorPricesInquiry_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorPricesInquiry"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/$adHocSchema": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "VendorPriceWorksheet_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{ids}": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorPriceWorksheet_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "VendorPriceWorksheet_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{id}": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "VendorPriceWorksheet_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "VendorPriceWorksheet_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/ReleaseVendorPriceWorksheet": {
      "post": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "VendorPriceWorksheet_InvokeAction_ReleaseVendorPriceWorksheet",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseVendorPriceWorksheet",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{actionName}": {
      "post": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "VendorPriceWorksheet_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheetCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "VendorPriceWorksheet_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "VendorPriceWorksheet_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorPriceWorksheet"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "VendorPriceWorksheet_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/VendorPriceWorksheet"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse/$adHocSchema": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "Warehouse_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse/{ids}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "Warehouse_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "Warehouse_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse/{id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "Warehouse_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "Warehouse_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse/{actionName}": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "Warehouse_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WarehouseCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "Warehouse_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/Warehouse": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "Warehouse_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Warehouse"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "Warehouse_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar/$adHocSchema": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "WorkCalendar_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar/{ids}": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkCalendar_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkCalendar_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar/{id}": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "WorkCalendar_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "WorkCalendar_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar/{actionName}": {
      "post": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "WorkCalendar_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkCalendarCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "WorkCalendar_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkCalendar": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "WorkCalendar_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkCalendar"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "WorkCalendar_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkCalendar"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/$adHocSchema": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "WorkClassCompensationCode_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{ids}": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkClassCompensationCode_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkClassCompensationCode_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{id}": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "WorkClassCompensationCode_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "WorkClassCompensationCode_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{actionName}": {
      "post": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "WorkClassCompensationCode_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCodeCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "WorkClassCompensationCode_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "WorkClassCompensationCode_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkClassCompensationCode"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "WorkClassCompensationCode_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkClassCompensationCode"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation/$adHocSchema": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Récupère du système le schéma des champs personnalisés de l'entité.",
        "operationId": "WorkLocation_GetAdHocSchema",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Le nom du champ, le nom de la vue et le type des champs qui ne sont pas définis dans le contrat du endpoint pour cet objet.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation/{ids}": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Récupère un enregistrement du système à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkLocation_GetByKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Supprime l'enregistrement à l'aide des valeurs de ses champs clés.",
        "operationId": "WorkLocation_DeleteByKeys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation/{id}": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Récupère un enregistrement du système à l'aide de la valeur de l'ID d'entité de la session.",
        "operationId": "WorkLocation_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement demandé.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Supprime l'enregistrement à l'aide de son identifiant de session.",
        "operationId": "WorkLocation_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The session ID of the record.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "L'enregistrement est supprimé avec succès."
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation/{actionName}": {
      "post": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Exécute une action dans le système.",
        "operationId": "WorkLocation_InvokeAction_CustomAction",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invocation",
            "in": "body",
            "description": "The record to which the action should be applied and the parameters of the action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkLocationCustomAction",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "L'opération est en cours.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "L'opération initiée par l'action est complétée.",
            "headers": {
              "Location": {
                "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Joint un fichier à un enregistrement.",
        "operationId": "WorkLocation_PutFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "The values of the key fields of the record.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "pipes"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file that you are going to attach with the extension.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Le fichier est joint avec succès.",
            "headers": {
              "Location": {
                "description": "Une URL qui peut être utilisée pour récupérer le fichier du système.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/WorkLocation": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Récupère un enregistrement du système qui répond aux conditions spécifiées.",
        "operationId": "WorkLocation_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to be skipped from the list of returned records.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to be returned from the system.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des enregistrements qui répondent aux conditions spécifiées.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkLocation"
              }
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Créé un enregistrement ou met à jour un enregistrement existant.",
        "operationId": "WorkLocation_PutEntity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The record to be passed to the system.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The fields of the entity to be returned from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The conditions that determine which records should be selected from the system.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The linked and detail entities that should be expanded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$custom",
            "in": "query",
            "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'enregistrement créé ou mis à jour.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "400": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "L'utilisateur n'est pas connecté au système.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "412": {
            "description": "Soit l’en-tête de la demande spécifie que l’entité doit être insérée mais qu’une entité avec ces clés existe déjà dans la base de données et ne peut pas être insérée, soit l’en-tête spécifie que l’entité doit être mise à jour mais qu’aucune entité avec ces clés dans la base de données.",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "422": {
            "description": "Les données spécifiées dans la requête sont non valides.",
            "schema": {
              "$ref": "#/definitions/WorkLocation"
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LongValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int64",
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "StringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "CustomStringField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomDecimalField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomDateTimeField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "date-time",
              "type": "string"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomBooleanField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomIntField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "int32",
              "type": "integer"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomLongField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "int64",
              "type": "integer"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomShortField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "int32",
              "type": "integer"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomByteField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "int32",
              "type": "integer"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomDoubleField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomGuidField": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomField"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "uuid",
              "type": "string"
            },
            "error": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomField": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "DecimalValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "DateTimeValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "BooleanValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "IntValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ShortValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ByteValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "DoubleValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "GuidValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "uuid",
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "FileLink": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "href": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "Entity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "rowNumber": {
          "format": "int64",
          "type": "integer"
        },
        "note": {
          "$ref": "#/definitions/StringValue"
        },
        "custom": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "error": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileLink"
          }
        }
      }
    },
    "HttpError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageDetail": {
          "type": "string"
        },
        "exceptionMessage": {
          "type": "string"
        },
        "exceptionType": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "modelState": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ACAInfoDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CoverageType": {
              "$ref": "#/definitions/StringValue"
            },
            "HealthPlanType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ACAInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ACAInfoDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ACAInfoDetail"
              }
            },
            "MinIndividualContribution": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "Account": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountCD": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountClass": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountID": {
              "$ref": "#/definitions/IntValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ChartOfAccountsOrder": {
              "$ref": "#/definitions/IntValue"
            },
            "ConsolidationAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostOption": {
              "$ref": "#/definitions/StringValue"
            },
            "RequireUnits": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RevaluationRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "Secured": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UseDefaultSubaccount": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AccountDetailsForPeriodInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "FromPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Ledger": {
              "$ref": "#/definitions/StringValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDetailsForPeriodInquiryDetail"
              }
            },
            "ToPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "IncludeUnposted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IncludeUnreleased": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AccountDetailsForPeriodInquiryDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "BatchNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreditAmountInBaseCurrency": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerVendor": {
              "$ref": "#/definitions/StringValue"
            },
            "DebitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DebitAmountInBaseCurrency": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Ledger": {
              "$ref": "#/definitions/StringValue"
            },
            "Module": {
              "$ref": "#/definitions/StringValue"
            },
            "PeriodID": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionType": {
              "$ref": "#/definitions/StringValue"
            },
            "Posted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Released": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AccountGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroupID": {
              "$ref": "#/definitions/StringValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "DefaultAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Expense": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/ShortValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AccountSummaryInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountClass": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Ledger": {
              "$ref": "#/definitions/StringValue"
            },
            "Period": {
              "$ref": "#/definitions/StringValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountSummaryRow"
              }
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AccountSummaryRow": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountClass": {
              "$ref": "#/definitions/StringValue"
            },
            "BeginningBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ConsolidationAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyBeginningBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyCreditTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyDebitTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyEndingBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyPtdTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DebitTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndingBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastActivity": {
              "$ref": "#/definitions/StringValue"
            },
            "LedgerID": {
              "$ref": "#/definitions/IntValue"
            },
            "PtdTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Activity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Body": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Internal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "Task": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivity": {
              "$ref": "#/definitions/TimeActivity"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedByID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RelatedEntityType": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedEntityNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "RelatedEntityDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ActivityDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Category": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CreatedByID": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Released": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Address": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AddressLine1": {
              "$ref": "#/definitions/StringValue"
            },
            "AddressLine2": {
              "$ref": "#/definitions/StringValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "PostalCode": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "Validated": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AppAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attribute": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ComponentID": {
              "$ref": "#/definitions/StringValue"
            },
            "ComponentLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CoveredQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CuryUnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EquipmentAction": {
              "$ref": "#/definitions/StringValue"
            },
            "EquipmentActionComment": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LineStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualPrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MarkforPO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ModelEquipmentLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "OverageQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverageUnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PickupDeliveryAction": {
              "$ref": "#/definitions/StringValue"
            },
            "PickupDeliveryLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "PickupDeliveryServiceID": {
              "$ref": "#/definitions/StringValue"
            },
            "POCompleted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PONbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaidItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedDocNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceContractItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ServiceOrderLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/IntValue"
            },
            "StaffMemberID": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TargetEquipmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "Warranty": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AppFinancialSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillingCustomer": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingCycle": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Commissionable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "RunBillingFor": {
              "$ref": "#/definitions/StringValue"
            },
            "Salesperson": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCalculationMode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ApplicableWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitIncreasingApplWage": {
              "$ref": "#/definitions/BenefitIncreasingApplWage"
            },
            "DeductionsDecreasingApplWage": {
              "$ref": "#/definitions/DeductionDecreasingApplWage"
            },
            "EarningIncreasingApplWage": {
              "$ref": "#/definitions/EarningIncreasingApplWage"
            },
            "EmployeeTaxesDecreasingApplWage": {
              "$ref": "#/definitions/TaxesDecreasingApplWage"
            },
            "EmployerTaxesIncreasingApplWage": {
              "$ref": "#/definitions/EmployerTaxesIncreasingApplWage"
            }
          }
        }
      ]
    },
    "AppLogs": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AddtoActualDuration": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Approved": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableLabor": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DetailLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Duration": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborItemID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LogLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LogLineStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ManageTimeManually": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "StaffMember": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TimeCardRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TrackTime": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Travel": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "Appointment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActualDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualEndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ActualEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ActualHandleManually": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ActualServiceDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ActualStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AppointmentTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppAttributes"
              }
            },
            "BranchLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "Confirmed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppDetails"
              }
            },
            "EstimatedServiceDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "FinancialSettings": {
              "$ref": "#/definitions/AppFinancialSettings"
            },
            "Finished": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "Logs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppLogs"
              }
            },
            "OptimizationResult": {
              "$ref": "#/definitions/StringValue"
            },
            "OtherInformation": {
              "$ref": "#/definitions/AppOtherInformation"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Prepayments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppPrepayments"
              }
            },
            "Profit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Profitability": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppProfitability"
              }
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ResourceEquipment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppResourceEquipment"
              }
            },
            "ScheduledDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ScheduledEndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledHandleManually": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ScheduledStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ServiceOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Staff": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppStaff"
              }
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppTaxDetails"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totals": {
              "$ref": "#/definitions/AppTotals"
            },
            "UnreachedCustomer": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ValidatedbyDispatcher": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WaitingforPurchasedItems": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkflowStage": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppOtherInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocumentType": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "IssueReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "RecurrenceDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "RouteID": {
              "$ref": "#/definitions/StringValue"
            },
            "RouteNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceScheduleID": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceServiceContractID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppPrepayments": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "AppliedtoOrders": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AvailableBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/IntValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceAppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppProfitability": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualQuantity": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableQuantity": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "Profit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProfitPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "StaffMember": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "AppResourceEquipment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Comment": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EquipmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Approval": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApprovedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "ApprovedByName": {
              "$ref": "#/definitions/StringValue"
            },
            "Approver": {
              "$ref": "#/definitions/StringValue"
            },
            "ApproverName": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppStaff": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DetailLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "PrimaryDriver": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "RouteDriver": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "StaffMember": {
              "$ref": "#/definitions/StringValue"
            },
            "StaffType": {
              "$ref": "#/definitions/StringValue"
            },
            "TrackTime": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "AppTaxDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "IncludeinVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AppTotals": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActualTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppointmentBillableTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppointmentTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableLaborTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentApplied": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentReceived": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentRemaining": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderBillableUnpaidBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderUnpaidBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATExemptTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATTaxableTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "AttributeDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AttributeID": {
              "$ref": "#/definitions/StringValue"
            },
            "ControlType": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EntryMask": {
              "$ref": "#/definitions/StringValue"
            },
            "Internal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RegExp": {
              "$ref": "#/definitions/StringValue"
            },
            "Values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinitionValue"
              }
            }
          }
        }
      ]
    },
    "AttributeDefinitionValue": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Disabled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/ShortValue"
            },
            "ValueID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AttributeValue": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AttributeID": {
              "$ref": "#/definitions/StringValue"
            },
            "AttributeDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            },
            "ValueDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BatchDeductionOrBenefitDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BenefitCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContributionType": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeductionCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Enabled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IsGarnishment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "BatchEarningDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AllowCopy": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CertifiedJob": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Code": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "Hours": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualRate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "Rate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExcelRecordID": {
              "$ref": "#/definitions/StringValue"
            },
            "ShiftCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Task": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivity": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocal": {
              "$ref": "#/definitions/StringValue"
            },
            "Units": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitType": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BatchOvertimeRules": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplyOvertimeRulesfortheDocument": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OvertimeRulesDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BatchOvertimeRulesDetail"
              }
            }
          }
        }
      ]
    },
    "BatchOvertimeRulesDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DayofWeek": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DisbursingEarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "Enabled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Multiplier": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OvertimeRule": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "ThresholdforOvertimehours": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocal": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BCRoleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RoleAssignmentID": {
              "$ref": "#/definitions/IntValue"
            },
            "BAccountID": {
              "$ref": "#/definitions/IntValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationCD": {
              "$ref": "#/definitions/StringValue"
            },
            "Role": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "BenefitIncreasingApplWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitIncreasingApplWageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BenefitIncreasingApplWageDetail"
              }
            },
            "InclusionType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BenefitIncreasingApplWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "BigCommerceStores": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccessToken": {
              "$ref": "#/definitions/StringValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "APIPath": {
              "$ref": "#/definitions/StringValue"
            },
            "ClientID": {
              "$ref": "#/definitions/StringValue"
            },
            "Connector": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StoreAdminPath": {
              "$ref": "#/definitions/StringValue"
            },
            "StoreName": {
              "$ref": "#/definitions/StringValue"
            },
            "WebDAVPassword": {
              "$ref": "#/definitions/StringValue"
            },
            "WebDAVPath": {
              "$ref": "#/definitions/StringValue"
            },
            "WebDAVUsername": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Bill": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Applications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillApplicationDetail"
              }
            },
            "ApprovedForPayment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillDetail"
              }
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillTaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorRef": {
              "$ref": "#/definitions/StringValue"
            },
            "IsTaxValid": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "BillApplicationDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BillDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculateDiscountsOnImport": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "NonBillable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "POLine": {
              "$ref": "#/definitions/IntValue"
            },
            "POOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "POReceiptLine": {
              "$ref": "#/definitions/IntValue"
            },
            "POReceiptType": {
              "$ref": "#/definitions/StringValue"
            },
            "POReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BillTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "BillToSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillToAddress": {
              "$ref": "#/definitions/Address"
            },
            "BillToAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "BillToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomerLocation": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BoxStockItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BoxID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "MaxQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Budget": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ComparetoBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "ComparetoLedger": {
              "$ref": "#/definitions/StringValue"
            },
            "ComparetoYear": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetDetail"
              }
            },
            "FinancialYear": {
              "$ref": "#/definitions/StringValue"
            },
            "Ledger": {
              "$ref": "#/definitions/StringValue"
            },
            "SubaccountFilter": {
              "$ref": "#/definitions/StringValue"
            },
            "TreeNodeFilter": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BudgetDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DistributedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FinancialYear": {
              "$ref": "#/definitions/StringValue"
            },
            "GroupID": {
              "$ref": "#/definitions/GuidValue"
            },
            "LastModifiedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "LedgerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Node": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Period01": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period02": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period03": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period04": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period05": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period06": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period07": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period08": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period09": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period10": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period11": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period12": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Period13": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Released": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "Campaigns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CampaignDetail"
              }
            },
            "Cases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountCaseDetail"
              }
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "Contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountContact"
              }
            },
            "Contracts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountContract"
              }
            },
            "DefaultLocationSettings": {
              "$ref": "#/definitions/BusinessAccountDefaultLocationSetting"
            },
            "Duplicate": {
              "$ref": "#/definitions/StringValue"
            },
            "Duplicates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DuplicateDetail"
              }
            },
            "LastIncomingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastOutgoingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Locations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountLocation"
              }
            },
            "MainAddress": {
              "$ref": "#/definitions/Address"
            },
            "MainAddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MainContact": {
              "$ref": "#/definitions/BusinessAccountMainContact"
            },
            "MarketingLists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketingListDetail"
              }
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "Opportunities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountOpportunityDetail"
              }
            },
            "Orders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountOrder"
              }
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "OwnerEmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "ParentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PrimaryContact": {
              "$ref": "#/definitions/Contact"
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "ShippingAddress": {
              "$ref": "#/definitions/Address"
            },
            "ShippingAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingAddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingContact": {
              "$ref": "#/definitions/BusinessAccountShippingContact"
            },
            "SourceCampaign": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "EnableCurrencyOverride": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "BusinessAccountCaseDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClosingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Contract": {
              "$ref": "#/definitions/StringValue"
            },
            "DateReported": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Estimation": {
              "$ref": "#/definitions/StringValue"
            },
            "InitialResponse": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "Severity": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountClassAttributeDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AttributeID": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultValue": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/ShortValue"
            }
          }
        }
      ]
    },
    "BusinessAccountContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountContract": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContractID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountDefaultLocationSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "Insurance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LeadTimeInDays": {
              "$ref": "#/definitions/ShortValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderPriority": {
              "$ref": "#/definitions/ShortValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ResidentialDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SaturdayDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingZone": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRegistrationID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountMainContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Fax": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "LanguageOrLocale": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Web": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountOpportunityDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "Estimation": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Probability": {
              "$ref": "#/definitions/IntValue"
            },
            "Stage": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "Total": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RequestedOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledShipment": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShippingZone": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountPaymentInstructionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/IntValue"
            },
            "PaymentInstructionsID": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "BusinessAccountShippingContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Fax": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "CalendarSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Friday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FridayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FridayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FriUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Monday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MondayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MondayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MonUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "SatUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Saturday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SaturdayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SaturdayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Sunday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SundayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SundayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SunUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Thursday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ThursdayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ThursdayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ThuUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Tuesday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TuesdayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TuesdayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TueUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Wednesday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WednesdayEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WednesdayStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WedUnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CampaignDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CampaignID": {
              "$ref": "#/definitions/StringValue"
            },
            "CampaignName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "Stage": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Carrier": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CarrierID": {
              "$ref": "#/definitions/StringValue"
            },
            "CarrierUnits": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerAccounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarrierCustomerAccount"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PlugInParameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarrierPluginParameter"
              }
            },
            "PlugInType": {
              "$ref": "#/definitions/StringValue"
            },
            "Centimeter": {
              "$ref": "#/definitions/StringValue"
            },
            "Inch": {
              "$ref": "#/definitions/StringValue"
            },
            "Kilogram": {
              "$ref": "#/definitions/StringValue"
            },
            "Pound": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CarrierCustomerAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CarrierAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerName": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "PostalCode": {
              "$ref": "#/definitions/StringValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "CarrierPluginParameter": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "PluginID": {
              "$ref": "#/definitions/StringValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Case": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableOvertime": {
              "$ref": "#/definitions/IntValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/IntValue"
            },
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "CaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClosingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ContactDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "Contract": {
              "$ref": "#/definitions/StringValue"
            },
            "DateReported": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InitialResponse": {
              "$ref": "#/definitions/StringValue"
            },
            "LastActivityDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastIncomingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastOutgoingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OvertimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "OwnerEmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "Priority": {
              "$ref": "#/definitions/StringValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedCases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseRelatedCase"
              }
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "ResolutionTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Severity": {
              "$ref": "#/definitions/StringValue"
            },
            "SLA": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "CaseDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClosingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DateReported": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Estimation": {
              "$ref": "#/definitions/StringValue"
            },
            "InitialResponse": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "Severity": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CaseRelatedCase": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "ParentCaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "RelationType": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CashSale": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashSaleDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CashSaleDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtendedPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "CategoryStockItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CategoryID": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "ChangeOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApprovalDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "ChangeDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Class": {
              "$ref": "#/definitions/StringValue"
            },
            "Commitments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeOrderCommitment"
              }
            },
            "CommitmentsChangeTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CompletionDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ContractTimeChangeDays": {
              "$ref": "#/definitions/IntValue"
            },
            "CostBudget": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeOrderCostBudget"
              }
            },
            "CostBudgetChangeTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DetailedDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "GrossMargin": {
              "$ref": "#/definitions/DecimalValue"
            },
            "GrossMarginAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OriginalCORefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "RevenueBudget": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeOrderRevenueBudget"
              }
            },
            "RevenueBudgetChangeTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevenueChangeNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ReverseStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ChangeOrderClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountClassAttributeDetail"
              }
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "Commitments": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostBudget": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RevenueBudget": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "ChangeOrderCommitment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AmountinBaseCurrency": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "OpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "POLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "PONbr": {
              "$ref": "#/definitions/StringValue"
            },
            "PotentiallyRevisedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PotentiallyRevisedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "POType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ChangeOrderCostBudget": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedReceivedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrentCommittedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrentCommittedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalBudgetedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OtherDraftCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PreviouslyApprovedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PreviouslyApprovedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalPotentiallyRevisedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ChangeOrderRevenueBudget": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "OtherDraftCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PreviouslyApprovedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PreviouslyApprovedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalPotentiallyRevisedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Check": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckDetail"
              }
            },
            "History": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckHistoryDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PaymentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UnappliedBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "CheckDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DocLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CheckHistoryDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountTaken": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorRef": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Commissions": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DefaultSalesperson": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesPersons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesPersonDetail"
              }
            }
          }
        }
      ]
    },
    "CompaniesStructure": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompaniesStructureDetail"
              }
            }
          }
        }
      ]
    },
    "CompaniesStructureDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchCountry": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchName": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchStatus": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CompanyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyStatus": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CompanyType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CompanyFinancialPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Company": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancialPeriodDetail"
              }
            },
            "FinancialYear": {
              "$ref": "#/definitions/StringValue"
            },
            "NbrOfPeriods": {
              "$ref": "#/definitions/ShortValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "CompensationDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EarningCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/StringValue"
            },
            "PayRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UnitOfPay": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Contact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Address": {
              "$ref": "#/definitions/Address"
            },
            "OverrideAccountAddress": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Campaigns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CampaignDetail"
              }
            },
            "Cases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseDetail"
              }
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "ContactMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ConvertedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "DateOfBirth": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "DoNotCall": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotFax": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotMail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Duplicate": {
              "$ref": "#/definitions/StringValue"
            },
            "DuplicateFound": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Duplicates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactDuplicateDetail"
              }
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Fax": {
              "$ref": "#/definitions/StringValue"
            },
            "FaxType": {
              "$ref": "#/definitions/StringValue"
            },
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "Gender": {
              "$ref": "#/definitions/StringValue"
            },
            "Image": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "LanguageOrLocale": {
              "$ref": "#/definitions/StringValue"
            },
            "LastIncomingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastOutgoingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MaritalStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "MarketingLists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketingListDetail"
              }
            },
            "MiddleName": {
              "$ref": "#/definitions/StringValue"
            },
            "NoMarketing": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NoMassMail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Notifications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactNotification"
              }
            },
            "Opportunities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityDetail"
              }
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "OwnerEmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "ParentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3Type": {
              "$ref": "#/definitions/StringValue"
            },
            "QualificationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "RoleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BCRoleAssignment"
              }
            },
            "Source": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceCampaign": {
              "$ref": "#/definitions/StringValue"
            },
            "SpouseOrPartnerName": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Synchronize": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Title": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UserInfo": {
              "$ref": "#/definitions/ContactUserInfo"
            },
            "WebSite": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "FullName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ContactDuplicateDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountType": {
              "$ref": "#/definitions/StringValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "Duplicate": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ContactNotification": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Bcc": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Format": {
              "$ref": "#/definitions/StringValue"
            },
            "MailingID": {
              "$ref": "#/definitions/StringValue"
            },
            "Module": {
              "$ref": "#/definitions/StringValue"
            },
            "NotificationID": {
              "$ref": "#/definitions/IntValue"
            },
            "Report": {
              "$ref": "#/definitions/StringValue"
            },
            "Source": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ContactRoles": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RoleDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "RoleName": {
              "$ref": "#/definitions/StringValue"
            },
            "Selected": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UserType": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "ContactUserInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "GeneratePassword": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Login": {
              "$ref": "#/definitions/StringValue"
            },
            "Password": {
              "$ref": "#/definitions/StringValue"
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactRoles"
              }
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "UserType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ContractUsage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BilledTransactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractUsageTransactionDetail"
              }
            },
            "ContractID": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "UnbilledTransactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractUsageTransactionDetail"
              }
            }
          }
        }
      ]
    },
    "ContractUsageTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CaseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TransactionID": {
              "$ref": "#/definitions/LongValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CostCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CostCodeID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "CreditCardProcessingDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TransactionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TransactionStatus": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CreditCardTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TranType": {
              "$ref": "#/definitions/StringValue"
            },
            "AuthNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TranDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExtProfileId": {
              "$ref": "#/definitions/StringValue"
            },
            "NeedValidation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrigTranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CardType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CreditVerificationRules": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreditDaysPastDue": {
              "$ref": "#/definitions/ShortValue"
            },
            "CreditLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreditVerification": {
              "$ref": "#/definitions/StringValue"
            },
            "FirstDueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OpenOrdersBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RemainingCreditLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnreleasedBalance": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "Currency": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencySymbol": {
              "$ref": "#/definitions/StringValue"
            },
            "DecimalPrecision": {
              "$ref": "#/definitions/ShortValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UseForAccounting": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "Customer": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ApplyOverdueCharges": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "AutoApplyPayments": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BAccountID": {
              "$ref": "#/definitions/IntValue"
            },
            "BillingAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillingContact": {
              "$ref": "#/definitions/Contact"
            },
            "BillingContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerContact"
              }
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CreditVerificationRules": {
              "$ref": "#/definitions/CreditVerificationRules"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerClass": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "EnableCurrencyOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableRateOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableWriteOffs": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LeadTimedays": {
              "$ref": "#/definitions/ShortValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "MainContact": {
              "$ref": "#/definitions/Contact"
            },
            "MultiCurrencyStatements": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderPriority": {
              "$ref": "#/definitions/ShortValue"
            },
            "ParentRecord": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentInstructions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountPaymentInstructionDetail"
              }
            },
            "PriceClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "PrimaryContact": {
              "$ref": "#/definitions/Contact"
            },
            "PrimaryContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "PrintDunningLetters": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PrintInvoices": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PrintStatements": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ResidentialDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Salespersons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSalesPerson"
              }
            },
            "SaturdayDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendDunningLettersbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendInvoicesbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendStatementsbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingContact": {
              "$ref": "#/definitions/Contact"
            },
            "ShippingContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingZoneID": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "StatementCycleID": {
              "$ref": "#/definitions/StringValue"
            },
            "StatementType": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRegistrationID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "WriteOffLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RestrictVisibilityTo": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "EntityUsageType": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExemptionNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "IsGuestCustomer": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "CustomerClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplyOverdueCharges": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ARAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ARSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountClassAttributeDetail"
              }
            },
            "AutoApplyPayments": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CashDiscountAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscountSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "COGSAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "COGSSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CreditDaysPastDue": {
              "$ref": "#/definitions/ShortValue"
            },
            "CreditLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreditVerification": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultLocationIDfromBranch": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DefaultRestrictionGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "EnableCurrencyOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableRateOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableWriteOffs": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EntityUsageType": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "GroupDocumentDiscountLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MiscAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "MiscSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "MultiCurrencyStatements": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverdueChargeID": {
              "$ref": "#/definitions/StringValue"
            },
            "OverLimitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaymentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaymentSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PrintDunningLetters": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PrintInvoices": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PrintStatements": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RequireEntityUsageType": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RequireTaxZone": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SendDunningLettersbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendInvoicesbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendStatementsByEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "StatementCycleID": {
              "$ref": "#/definitions/StringValue"
            },
            "StatementType": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZoneID": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "UnrealizedGainAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "UnrealizedGainSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "UnrealizedLossAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "UnrealizedLossSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "WriteOffLimit": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "CustomerContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Contact": {
              "$ref": "#/definitions/Contact"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "CustomerLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Calendar": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DefaultProject": {
              "$ref": "#/definitions/StringValue"
            },
            "EntityUsageType": {
              "$ref": "#/definitions/StringValue"
            },
            "FedExGroundCollect": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "Insurance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LeadTimeDays": {
              "$ref": "#/definitions/ShortValue"
            },
            "LocationContact": {
              "$ref": "#/definitions/Contact"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderPriority": {
              "$ref": "#/definitions/ShortValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ResidentialDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RoleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BCRoleAssignment"
              }
            },
            "SaturdayDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingZone": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExemptionNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRegistrationID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "CustomerPaymentMethod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CardAccountNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerProfileID": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPaymentMethodDetail"
              }
            },
            "InstanceID": {
              "$ref": "#/definitions/IntValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ProcCenterID": {
              "$ref": "#/definitions/StringValue"
            },
            "CardType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CustomerPaymentMethodDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "CustomerPriceClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PriceClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "CustomerSalesPerson": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Commission": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DeductionBenefitCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ACAApplicable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ACAInformation": {
              "$ref": "#/definitions/ACAInformation"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AffectsTaxCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ApplicableWage": {
              "$ref": "#/definitions/ApplicableWage"
            },
            "AssociatedWith": {
              "$ref": "#/definitions/StringValue"
            },
            "ContributionType": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionBenefitCodeID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeDeduction": {
              "$ref": "#/definitions/EmployeeDeduction"
            },
            "EmployerContribution": {
              "$ref": "#/definitions/EmployerContribution"
            },
            "GLAccounts": {
              "$ref": "#/definitions/DeductionOrBenefitCodeGLAccounts"
            },
            "InvoiceDescrSource": {
              "$ref": "#/definitions/StringValue"
            },
            "IsGarnishment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PayableBenefit": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShowApplicableWageTab": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxSettingsCA": {
              "$ref": "#/definitions/TaxSettingsCA"
            },
            "TaxSettingsUS": {
              "$ref": "#/definitions/TaxSettingsUS"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorInvoiceDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/DeductionBenefitWCCCode"
            }
          }
        }
      ]
    },
    "DeductionBenefitWCCCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCodeRates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeRateDetail"
              }
            }
          }
        }
      ]
    },
    "DeductionDecreasingApplWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductionIncreasingApplWageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeductionDecreasingApplWageDetail"
              }
            },
            "InclusionType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DeductionDecreasingApplWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductionCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "DeductionOrBenefitCodeGLAccounts": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DeductionOrBenefitTaxDetailCA": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Benefitincreasestaxablewage": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Deductiondecreasestaxablewage": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DeductionOrBenefitTaxDetailUS": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DeductionsAndBenefits": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductionAndBenefitUseClassDefaults": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DeductionsAndBenefitsDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDeductionOrBenefitDetail"
              }
            },
            "DeductionSplitMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "MaxPercOfNetPayForAllGarnishm": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "DefaultTaskForGLAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultTask": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Details": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Compte": {
              "$ref": "#/definitions/StringValue"
            },
            "Libelle": {
              "$ref": "#/definitions/StringValue"
            },
            "Qtedebase": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Case1099": {
              "$ref": "#/definitions/StringValue"
            },
            "Etablissement": {
              "$ref": "#/definitions/StringValue"
            },
            "Credit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Debit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Codedecout": {
              "$ref": "#/definitions/StringValue"
            },
            "Paysdorigine": {
              "$ref": "#/definitions/StringValue"
            },
            "Soldedelescompte": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montantderemise": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Coutunitairenet": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Cout": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montantdetaxe": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montantdacompte": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montantderetenuedegarantie": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Retenuedegarantienonintegreeadate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Taxeretenue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montant": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Solde": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Coutunitaire": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Datededepense": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Schemaderegularisation": {
              "$ref": "#/definitions/StringValue"
            },
            "Echeancierdereguldorigine": {
              "$ref": "#/definitions/StringValue"
            },
            "Coderemise": {
              "$ref": "#/definitions/StringValue"
            },
            "Sequencederemise": {
              "$ref": "#/definitions/StringValue"
            },
            "deremise": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Datedefindesconditions": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Datededebutdesconditions": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpiredCompliance": {
              "$ref": "#/definitions/GuidValue"
            },
            "Codearticle": {
              "$ref": "#/definitions/StringValue"
            },
            "Typefraisdapproche": {
              "$ref": "#/definitions/StringValue"
            },
            "Lignedefraisdapproche": {
              "$ref": "#/definitions/IntValue"
            },
            "Npiecefraisdapproche": {
              "$ref": "#/definitions/StringValue"
            },
            "Ndeligne": {
              "$ref": "#/definitions/IntValue"
            },
            "Remisemanuelle": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Coutmanuel": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Nonfacturable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Lignedelacommandedachat": {
              "$ref": "#/definitions/IntValue"
            },
            "Numerodecommande": {
              "$ref": "#/definitions/StringValue"
            },
            "Typedecommande": {
              "$ref": "#/definitions/StringValue"
            },
            "TypededocEPA": {
              "$ref": "#/definitions/StringValue"
            },
            "NderefEPA": {
              "$ref": "#/definitions/StringValue"
            },
            "dacompte": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Affaire": {
              "$ref": "#/definitions/StringValue"
            },
            "Quantite": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Lignedereceptiondachat": {
              "$ref": "#/definitions/IntValue"
            },
            "Ndereceptionachat": {
              "$ref": "#/definitions/StringValue"
            },
            "Reference": {
              "$ref": "#/definitions/StringValue"
            },
            "RefDocInterv": {
              "$ref": "#/definitions/GuidValue"
            },
            "RefDocIntervRefDocInterv": {
              "$ref": "#/definitions/StringValue"
            },
            "TypeDocInterv": {
              "$ref": "#/definitions/StringValue"
            },
            "Pourcentagederetenuedegarantie": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Tri": {
              "$ref": "#/definitions/IntValue"
            },
            "SubcontractLine": {
              "$ref": "#/definitions/GuidValue"
            },
            "SubcontractNbr": {
              "$ref": "#/definitions/GuidValue"
            },
            "Analytique": {
              "$ref": "#/definitions/StringValue"
            },
            "Sousarticle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phaseprojet": {
              "$ref": "#/definitions/StringValue"
            },
            "Categoriedetaxe": {
              "$ref": "#/definitions/StringValue"
            },
            "Descrdetransaction": {
              "$ref": "#/definitions/StringValue"
            },
            "NatureDEB": {
              "$ref": "#/definitions/StringValue"
            },
            "Typedepiece": {
              "$ref": "#/definitions/StringValue"
            },
            "Unite": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DirectDepositDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountType": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BankName": {
              "$ref": "#/definitions/StringValue"
            },
            "BankRoutingNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "DepositSequenceNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "GetsRemainder": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Percent": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "Discount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BreakBy": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerPriceClasses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCustomerPriceClassesDetail"
              }
            },
            "Customers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCustomerDetail"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountBreakpoints": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountBreakpointDetail"
              }
            },
            "DiscountBy": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ItemPriceClasses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountItemPriceClassesDetail"
              }
            },
            "Items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountItemDetail"
              }
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Promotional": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ProrateDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Sequence": {
              "$ref": "#/definitions/StringValue"
            },
            "ShowFreeItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Warehouses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountWarehouseDetail"
              }
            }
          }
        }
      ]
    },
    "DiscountBreakpointDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountDetailID": {
              "$ref": "#/definitions/IntValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastBreakAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastBreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastDiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastDiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastFreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingBreakAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingBreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PendingDiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingDiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingFreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "DiscountCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicableTo": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountCodeID": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "DiscountCustomerDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DiscountCustomerPriceClassesDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "PriceClassID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DiscountItemDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DiscountItemPriceClassesDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "PriceClassID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DiscountWarehouseDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DocContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "DuplicateDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountType": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "Duplicate": {
              "$ref": "#/definitions/StringValue"
            },
            "DuplicateContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "EntityType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningCodeGLAccounts": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseSub": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningCodeProjectSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillableProject": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DefaultProjectCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultProjectTask": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningCodeTaxDetailCA": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Taxability": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningCodeTaxDetailUS": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningIncreasingApplWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EarningIncreasingApplWageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningIncreasingApplWageDetail"
              }
            },
            "InclusionType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EarningIncreasingApplWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningTypeCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningTypeCode": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "EarningTypeCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrueTimeOff": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Category": {
              "$ref": "#/definitions/StringValue"
            },
            "ContributestoWCCCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningTypeCodeID": {
              "$ref": "#/definitions/StringValue"
            },
            "GLAccounts": {
              "$ref": "#/definitions/EarningCodeGLAccounts"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Multiplier": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectSettings": {
              "$ref": "#/definitions/EarningCodeProjectSettings"
            },
            "PublicHoliday": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RegularTimeTypeCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxAndReportingCA": {
              "$ref": "#/definitions/TaxAndReportingCA"
            },
            "TaxAndReportingUS": {
              "$ref": "#/definitions/TaxAndReportingUS"
            }
          }
        }
      ]
    },
    "Email": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Bcc": {
              "$ref": "#/definitions/StringValue"
            },
            "Body": {
              "$ref": "#/definitions/StringValue"
            },
            "Cc": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "From": {
              "$ref": "#/definitions/StringValue"
            },
            "FromEmailAccountDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "FromEmailAccountID": {
              "$ref": "#/definitions/IntValue"
            },
            "Incoming": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Internal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MailStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Parent": {
              "$ref": "#/definitions/GuidValue"
            },
            "ParentSummary": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivity": {
              "$ref": "#/definitions/TimeActivity"
            },
            "To": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedByID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "RelatedEntityType": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedEntityNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "RelatedEntityDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmailProcessing": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/IntValue"
            },
            "AccountEmailAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "AssignedToMe": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AssignedToOwner": {
              "$ref": "#/definitions/StringValue"
            },
            "IncludeFailed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Result": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmailProcessingRow"
              }
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmailProcessingRow": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EmailAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "From": {
              "$ref": "#/definitions/StringValue"
            },
            "MailStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Selected": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "To": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Employee": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "ContactInfo": {
              "$ref": "#/definitions/Contact"
            },
            "Delegates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDelegate"
              }
            },
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeSettings": {
              "$ref": "#/definitions/EmployeeSettings"
            },
            "EmploymentHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmploymentHistoryRecord"
              }
            },
            "FinancialSettings": {
              "$ref": "#/definitions/EmployeeFinancialSettings"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeClassPTOBankDefault": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrualLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AccrualMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CarryoverAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CarryoverType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DisbursingType": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EmployeeClass": {
              "$ref": "#/definitions/StringValue"
            },
            "FrontLoadingAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "HoursPerYear": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PTOBank": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeClassWorkLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DefaultWorkLocation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeDeduction": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApplicableEarnings": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "MaximumAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaximumFrequency": {
              "$ref": "#/definitions/StringValue"
            },
            "Percent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReportingTypeCA": {
              "$ref": "#/definitions/StringValue"
            },
            "ReportingTypeUS": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeDeductionOrBenefitDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ContributionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContributionMax": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContributionMaximumFrequency": {
              "$ref": "#/definitions/StringValue"
            },
            "ContributionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeductionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeductionCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionMax": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeductionMaximumFrequency": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "GarnishmentDetails": {
              "$ref": "#/definitions/GarnishmentDetails"
            },
            "IsGarnish": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Sequence": {
              "$ref": "#/definitions/IntValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UseContributionDefaults": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseDeductionDefaults": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "EmployeeDelegate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Delegate": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "DelegationOf": {
              "$ref": "#/definitions/StringValue"
            },
            "StartsOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpiresOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "IsActive": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "EmployeeFinancialSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "APAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "APSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentInstructions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountPaymentInstructionDetail"
              }
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaymentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaymentSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeGeneralInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Calendar": {
              "$ref": "#/definitions/StringValue"
            },
            "CalendarClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CertifiedProjectHoursperYear": {
              "$ref": "#/definitions/IntValue"
            },
            "DefaultUnion": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultWCCCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ExemptFromCertReporting": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExemptFromCertReportingClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExemptFromOvertimeRules": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExemptFromOvertimeRulesClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NetPayMinClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NetPayMinimum": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverrideHoursPerYearForCertClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideHrsPerYearForCertProjects": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PayGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "PayGroupClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UnionClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseClassDefaultValueHoursPerYearForCertifiedUseDflt": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WCCCodeClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WeeksPerYearClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkingHoursPerWeek": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WorkingHoursPerYear": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WorkingWeeksPerYear": {
              "$ref": "#/definitions/ByteValue"
            }
          }
        }
      ]
    },
    "EmployeeGLAccounts": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOAssetAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOAssetSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeePaidTimeOff": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "PaidTimeOffDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePaidTimeOffDetail"
              }
            },
            "UsePTOBanksfromEmployeeClass": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "EmployeePaidTimeOffDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrualLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AccrualMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AmountAccrued": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AmountAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AmountUsed": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CarryoverAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CarryoverType": {
              "$ref": "#/definitions/StringValue"
            },
            "CreateFinancialTransaction": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DisbursingType": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FrontLoadingAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "HoursAccrued": {
              "$ref": "#/definitions/DecimalValue"
            },
            "HoursAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "HoursPerYear": {
              "$ref": "#/definitions/DecimalValue"
            },
            "HoursUsed": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PTOBank": {
              "$ref": "#/definitions/StringValue"
            },
            "UseClassDefaultValues": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "EmployeePaycheckEarningDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CertifiedJob": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Code": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Hours": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualRate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "Rate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShiftCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Task": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocal": {
              "$ref": "#/definitions/StringValue"
            },
            "Units": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitType": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeePaycheckEarnings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeType": {
              "$ref": "#/definitions/StringValue"
            },
            "Hours": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ManualAmount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RegularAmounttoBePaid": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "EmployeePaycheckSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeePaycheckEarnings": {
              "$ref": "#/definitions/EmployeePaycheckEarnings"
            },
            "Hours": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaycheckRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Rate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VoidPaycheckRef": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeePayrollClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeePayrollClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PayrollDefaults": {
              "$ref": "#/definitions/EmployeePayrollClassDefaults"
            },
            "PTODefaults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeClassPTOBankDefault"
              }
            }
          }
        }
      ]
    },
    "EmployeePayrollClassDefaults": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CertifiedProjectHoursperYear": {
              "$ref": "#/definitions/IntValue"
            },
            "DefaultCalendar": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultUnion": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultWCCCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeType": {
              "$ref": "#/definitions/StringValue"
            },
            "ExemptFromCertifiedReporting": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExemptFromOvertimeRules": {
              "$ref": "#/definitions/BooleanValue"
            },
            "HoursPerYearForCertified": {
              "$ref": "#/definitions/StringValue"
            },
            "MaximumPercentofNetPayforallGarnishments": {
              "$ref": "#/definitions/DecimalValue"
            },
            "NetPayMinimum": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverrideHoursPerYearforCertProject": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PayGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "UsePayrollWorkLocationfromProject": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkingHoursPerWeek": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WorkingHoursPerYear": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WorkingWeeksPerYear": {
              "$ref": "#/definitions/ByteValue"
            },
            "WorkLocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeClassWorkLocation"
              }
            }
          }
        }
      ]
    },
    "EmployeePayrollSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AddressInfo": {
              "$ref": "#/definitions/Address"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "Compensation": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompensationDetail"
              }
            },
            "DeductionsAndBenefits": {
              "$ref": "#/definitions/DeductionsAndBenefits"
            },
            "DirectDepositDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DirectDepositDetail"
              }
            },
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeType": {
              "$ref": "#/definitions/StringValue"
            },
            "EmploymentDates": {
              "$ref": "#/definitions/EmploymentDates"
            },
            "EmploymentRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmploymentRecord"
              }
            },
            "GeneralInfo": {
              "$ref": "#/definitions/EmployeeGeneralInfo"
            },
            "GLAccounts": {
              "$ref": "#/definitions/EmployeeGLAccounts"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaidTimeOff": {
              "$ref": "#/definitions/EmployeePaidTimeOff"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Taxes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeTaxDetail"
              }
            },
            "TaxSettings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxSettingDetail"
              }
            },
            "EmployeeTypeClassDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkLocations": {
              "$ref": "#/definitions/EmployeeWorkLocations"
            }
          }
        }
      ]
    },
    "EmployeeSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "Calendar": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "DepartmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeClass": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "EnableCurrencyOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableRateOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "RegularHoursValidation": {
              "$ref": "#/definitions/StringValue"
            },
            "ReportsTo": {
              "$ref": "#/definitions/StringValue"
            },
            "RouteEmails": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Salesperson": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeCardIsRequired": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UnionLocalID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCodeSettings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCodeSetting"
              }
            },
            "TaxDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeWorkLocationDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DefaultWorkLocation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployeeWorkLocations": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "UseClassDefaultValueUsePayrollProjectWorkLocationUseDflt": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UsePayrollWorkLocationfromProject": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkLocationClassDefaults": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkLocationDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeWorkLocationDetail"
              }
            }
          }
        }
      ]
    },
    "EmployerContribution": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApplicableEarnings": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "CertifiedReportingType": {
              "$ref": "#/definitions/StringValue"
            },
            "ContributestoGrossCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MaximumAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaximumFrequency": {
              "$ref": "#/definitions/StringValue"
            },
            "NoFinancialTransaction": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Percent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReportingTypeCA": {
              "$ref": "#/definitions/StringValue"
            },
            "ReportingTypeUS": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployerTaxesIncreasingApplWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EmployerTaxesIncreasingApplWageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployerTaxesIncreasingApplWageDetail"
              }
            },
            "InclusionType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmployerTaxesIncreasingApplWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmploymentDates": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "HireDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TerminationDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "EmploymentHistoryRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "PositionID": {
              "$ref": "#/definitions/StringValue"
            },
            "RehireEligible": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartReason": {
              "$ref": "#/definitions/StringValue"
            },
            "Terminated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TerminationReason": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EmploymentRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FinalPayment": {
              "$ref": "#/definitions/GuidValue"
            },
            "Position": {
              "$ref": "#/definitions/StringValue"
            },
            "RehireEligible": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartReason": {
              "$ref": "#/definitions/StringValue"
            },
            "Terminated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TerminationReason": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Event": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllDay": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attendees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventAttendee"
              }
            },
            "Body": {
              "$ref": "#/definitions/StringValue"
            },
            "Category": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Internal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Priority": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedActivities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Reminder": {
              "$ref": "#/definitions/ReminderDetail"
            },
            "ShowAs": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivity": {
              "$ref": "#/definitions/EventTimeActivity"
            },
            "CreatedByID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RelatedEntityType": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedEntityNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "RelatedEntityDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "EventAttendee": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Comment": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "EventNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "InvitationStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "Key": {
              "$ref": "#/definitions/StringValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "NameAttendeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "EventTimeActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseClaim": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApprovalDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ApprovalDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            },
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "ClaimedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "ClaimTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DepartmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseClaimDetails"
              }
            },
            "FinancialDetails": {
              "$ref": "#/definitions/ExpenseClaimFinancialDetail"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "ReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseClaimTaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATExemptTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATTaxableTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ExpenseClaimAPDocument": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseClaimDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AmountInClaimCurrency": {
              "$ref": "#/definitions/DecimalValue"
            },
            "APRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ARRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ClaimAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeePart": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseItemID": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "NetAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "TipAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseClaimFinancialDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "APDocuments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseClaimAPDocument"
              }
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "PosttoPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseClaimTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductibleTaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpenseAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "IncludeinVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ClaimAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ClaimedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpenseItemID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ReceiptDetails": {
              "$ref": "#/definitions/ExpenseReceiptDetails"
            },
            "ReceiptID": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpenseReceiptTaxDetails"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ExpenseReceiptDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrancyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeePart": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseClaimID": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseClaimStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExpenseReceiptTaxDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductibleTaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpenseAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "IncludeInVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ExternalCommitment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "CommittedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedReceivedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OriginalCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalCommittedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedDocument": {
              "$ref": "#/definitions/StringValue"
            },
            "RevisedCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "FinancialPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancialPeriodDetail"
              }
            },
            "FinancialYear": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NbrOfPeriods": {
              "$ref": "#/definitions/ShortValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UserDefinedPeriods": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "FinancialPeriodDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdjustmentPeriod": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClosedInAP": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClosedInAR": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClosedInCA": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClosedInFA": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ClosedInIN": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FinancialPeriodID": {
              "$ref": "#/definitions/StringValue"
            },
            "LengthInDays": {
              "$ref": "#/definitions/IntValue"
            },
            "PeriodNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "FinancialSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillSeparately": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscountDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EntityUsageType": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "OverrideTaxZone": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "FinancialYear": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdjustToPeriodStart": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BelongsToNextYear": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DayOfWeek": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancialYearPeriodDetail"
              }
            },
            "FinancialYearStartsOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FirstFinancialYear": {
              "$ref": "#/definitions/StringValue"
            },
            "FirstPeriodStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "HasAdjustmentPeriod": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LengthOfFinancialPeriodInDays": {
              "$ref": "#/definitions/ShortValue"
            },
            "NbrOfFinancialPeriods": {
              "$ref": "#/definitions/ShortValue"
            },
            "PeriodsStartDayOfWeek": {
              "$ref": "#/definitions/StringValue"
            },
            "PeriodType": {
              "$ref": "#/definitions/StringValue"
            },
            "UserDefinedPeriods": {
              "$ref": "#/definitions/BooleanValue"
            },
            "YearEndCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "FinancialYearPeriodDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PeriodNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "FOBPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "FOBPointID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "GarnishmentDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "GarnCourtDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "GarnCourtName": {
              "$ref": "#/definitions/StringValue"
            },
            "GarnDocRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "GarnOrigAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "GarnPaidAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "GarnVendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "GarnVendorInvDescr": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryAdjustment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryAdjustmentDetail"
              }
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "InventoryAdjustmentDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostLayerType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SpecialOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryAllocationInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Available": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AvailableForIssue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AvailableForShipping": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BaseUnit": {
              "$ref": "#/definitions/StringValue"
            },
            "InTransit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InTransitToSO": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryIssues": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryReceipts": {
              "$ref": "#/definitions/DecimalValue"
            },
            "KitAssemblyDemand": {
              "$ref": "#/definitions/DecimalValue"
            },
            "KitAssemblySupply": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "OnHand": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OnLocationNotAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PurchaseForSO": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PurchaseForSOPrepared": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PurchaseOrders": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PurchasePrepared": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PurchaseReceipts": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReceiptsForSO": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryAllocationRow"
              }
            },
            "SOAllocated": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SOBackOrdered": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SOBooked": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SOPrepared": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SOShipped": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SOToPurchase": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalAddition": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalDeduction": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryAllocationRow": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllocationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "AllocationType": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "Expired": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Module": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "InventoryFileUrls": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "FileType": {
              "$ref": "#/definitions/StringValue"
            },
            "FileURL": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "InventoryIssue": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ControlAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ControlQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryIssueDetail"
              }
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "InventoryIssueDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryIssueDetailAllocation"
              }
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostLayerType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExtCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNumber": {
              "$ref": "#/definitions/IntValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "SpecialOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TranType": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryIssueDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SplitLineNumber": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryItemCrossReference": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AlternateID": {
              "$ref": "#/definitions/StringValue"
            },
            "AlternateType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorOrCustomer": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryItemUOMConversion": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ConversionFactor": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FromUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "MultiplyOrDivide": {
              "$ref": "#/definitions/StringValue"
            },
            "ToUOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryQuantityAvailable": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryQuantityAvailableDetail"
              }
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "InventoryQuantityAvailableDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "QtyAvailable": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "InventoryReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ControlCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ControlQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryReceiptDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TransferNbr": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryReceiptDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryReceiptDetailAllocation"
              }
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostLayerType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExtCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNumber": {
              "$ref": "#/definitions/IntValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SpecialOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventoryReceiptDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SplitLineNumber": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventorySummaryInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ExpandByLotSerialNbr": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventorySummaryRow"
              }
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InventorySummaryRow": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedTotalCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedUnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableForShipment": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyNotAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyOnHand": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Invoice": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApplicationsCreditMemo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceApplicationsCreditMemo"
              }
            },
            "ApplicationsDefault": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceApplicationsDefault"
              }
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillingPrinted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "BillToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceDetail"
              }
            },
            "DiscountDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceDiscountDetail"
              }
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LinkARAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LinkBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "ShipToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceTaxDetail"
              }
            },
            "IsTaxValid": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InvoiceApplicationsCreditMemo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InvoiceApplicationsDefault": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountTaken": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InvoiceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculateDiscountsOnImport": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtendedPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InvoiceDiscountDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExternalDiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "RetainedDiscount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SequenceID": {
              "$ref": "#/definitions/StringValue"
            },
            "SkipDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "InvoiceTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ItemClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemClassAtrribute"
              }
            },
            "AvailabilityCalculationRule": {
              "$ref": "#/definitions/StringValue"
            },
            "BaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "CountryOfOrigin": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LotSerialClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PostingClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "StockItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TariffCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ValuationMethod": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ItemClassAtrribute": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AttributeID": {
              "$ref": "#/definitions/StringValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/ShortValue"
            }
          }
        }
      ]
    },
    "ItemPriceClassesDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "PriceClassID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ItemSalesCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CategoryID": {
              "$ref": "#/definitions/IntValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemSalesCategoryMember"
              }
            },
            "ParentCategoryID": {
              "$ref": "#/definitions/IntValue"
            },
            "Path": {
              "$ref": "#/definitions/StringValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/IntValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "ItemSalesCategoryMember": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemStatus": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ItemsDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ItemWarehouse": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DefaultIssueFrom": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultReceiptTo": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultSubitem": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventorySubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MaxQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverrideInventoryAccountSubaccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverridePreferredVendor": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverridePrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideReplenishmentSettings": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideServiceLevel": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideStandardCost": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideProductManager": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideMaxQty": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideReorderPoint": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideSafetyStock": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PreferredLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "PreferredVendor": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductManager": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "ReorderPoint": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReplenishmentClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentSource": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentWarehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "SafetyStock": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Seasonality": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceLevel": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "JournalTransaction": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JournalTransactionDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LedgerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Module": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "JournalTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DebitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "IsNonPM": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "NonBillable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTransactionID": {
              "$ref": "#/definitions/LongValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorOrCustomer": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitAssembly": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitAssemblyAllocation"
              }
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "KitInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "NonStockComponents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitAssemblyNonStockComponent"
              }
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Revision": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "StockComponents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitAssemblyStockComponent"
              }
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitAssemblyAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitAssemblyNonStockComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "NonStockInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitAssemblyStockComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitAssemblyStockComponentAllocation"
              }
            },
            "ComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "StockInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitAssemblyStockComponentAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitNonStockComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllowComponentQtyVariance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "NonStockInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "KitSpecification": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "IsNonStock": {
              "$ref": "#/definitions/BooleanValue"
            },
            "KitInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NonStockComponents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitNonStockComponent"
              }
            },
            "RevisionID": {
              "$ref": "#/definitions/StringValue"
            },
            "StockComponents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KitStockComponent"
              }
            }
          }
        }
      ]
    },
    "KitStockComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllowComponentQtyVariance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinComponentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "StockInventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "LaborCostRate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocal": {
              "$ref": "#/definitions/StringValue"
            },
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LaborRate"
              }
            }
          }
        }
      ]
    },
    "LaborRate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AnnualRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "HourlyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "RegularHoursPerWeek": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TypeOfEmployment": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocalID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Lead": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Address": {
              "$ref": "#/definitions/Address"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Campaigns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CampaignDetail"
              }
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "DoNotCall": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotFax": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotMail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Duplicate": {
              "$ref": "#/definitions/StringValue"
            },
            "DuplicateFound": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Duplicates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DuplicateDetail"
              }
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Fax": {
              "$ref": "#/definitions/StringValue"
            },
            "FaxType": {
              "$ref": "#/definitions/StringValue"
            },
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "LanguageOrLocale": {
              "$ref": "#/definitions/StringValue"
            },
            "LastIncomingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastOutgoingActivity": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LeadClass": {
              "$ref": "#/definitions/StringValue"
            },
            "LeadDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "LeadID": {
              "$ref": "#/definitions/IntValue"
            },
            "MarketingLists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketingListDetail"
              }
            },
            "NoMarketing": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NoMassMail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "OwnerEmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "ParentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "Source": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceCampaign": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Title": {
              "$ref": "#/definitions/StringValue"
            },
            "WebSite": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "RefContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "ConvertedBy": {
              "$ref": "#/definitions/StringValue"
            },
            "QualificationDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "Ledger": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Branches": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LedgerBranches"
              }
            },
            "Companies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LedgerCompanies"
              }
            },
            "ConsolidationSource": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LedgerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "LedgerBranches": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchName": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "LedgerCompanies": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Company": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "LotSerialClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AssignmentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "IssueMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Segments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LotSerialClassSegment"
              }
            },
            "TrackExpirationDate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TrackingMethod": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "LotSerialClassSegment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "SegmentNbr": {
              "$ref": "#/definitions/ShortValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "MarketingListDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "DynamicList": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Format": {
              "$ref": "#/definitions/StringValue"
            },
            "ListName": {
              "$ref": "#/definitions/StringValue"
            },
            "MarketingListID": {
              "$ref": "#/definitions/IntValue"
            },
            "Subscribed": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "MatrixItems": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DefaultPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "MSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ItemStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ExportToExternal": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "NonStockItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BaseUnit": {
              "$ref": "#/definitions/StringValue"
            },
            "CrossReferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryItemCrossReference"
              }
            },
            "CurrentCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DefaultPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeferralAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DeferralSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseAccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseAccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "IsKit": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ItemClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PendingCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingCostDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "POAccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "POAccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PostingClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchaseUnit": {
              "$ref": "#/definitions/StringValue"
            },
            "ReasonCodeSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "RequireReceipt": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RequireShipment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonStockItemSalesCategory"
              }
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesUnit": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonStockItemVendorDetail"
              }
            },
            "Volume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VolumeUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Weight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WeightUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "CurySpecificMSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurySpecificPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Availability": {
              "$ref": "#/definitions/StringValue"
            },
            "ExportToExternal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryStockItem"
              }
            },
            "Content": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrentStdCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CustomURL": {
              "$ref": "#/definitions/StringValue"
            },
            "DimensionWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FileUrls": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryFileUrls"
              }
            },
            "MetaDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "MetaKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "MSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "PageTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "SearchKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "TemplateItemID": {
              "$ref": "#/definitions/StringValue"
            },
            "Visibility": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "NonStockItemSalesCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CategoryID": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "NonStockItemVendorDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorName": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "ODFournisseurs": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Comptedebilan": {
              "$ref": "#/definitions/StringValue"
            },
            "Sectionanalytique": {
              "$ref": "#/definitions/StringValue"
            },
            "Etablissement": {
              "$ref": "#/definitions/StringValue"
            },
            "Totalcredit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totaldebit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TypedOD": {
              "$ref": "#/definitions/StringValue"
            },
            "DatedocFournisseur": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Remisesdocument": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SoldeCuryDocBal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Devise": {
              "$ref": "#/definitions/StringValue"
            },
            "SoldeCuryInitDocBal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totaldudetail": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Escompte": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totalaudebitcreditducomptedebilan": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Taxeretenue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Diffdarrondi": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Montantdetaxe": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totaltaxes": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totalexonere": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalsoumisaTVA": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CuryViewState": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Datedescompte": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Datecomptable": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Libelle": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Datedecheance": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Periodecomptable": {
              "$ref": "#/definitions/StringValue"
            },
            "RefFournFact": {
              "$ref": "#/definitions/StringValue"
            },
            "JointPayees": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DocdeRG": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PaybyLine": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Affaire": {
              "$ref": "#/definitions/StringValue"
            },
            "Reference": {
              "$ref": "#/definitions/StringValue"
            },
            "Appliquerlaretenuedegarantie": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Statut": {
              "$ref": "#/definitions/StringValue"
            },
            "Conditionsdereglement": {
              "$ref": "#/definitions/StringValue"
            },
            "Codetiers": {
              "$ref": "#/definitions/StringValue"
            },
            "Adresse": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Details"
              }
            },
            "RefExterne": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Opportunity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "Address": {
              "$ref": "#/definitions/Address"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "ContactInformation": {
              "$ref": "#/definitions/OpportunityContact"
            },
            "ConvertedLeadDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "ConvertedLeadID": {
              "$ref": "#/definitions/IntValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyViewState": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Details": {
              "$ref": "#/definitions/StringValue"
            },
            "Discount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Discounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityDiscount"
              }
            },
            "Estimation": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualAmount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OpportunityID": {
              "$ref": "#/definitions/StringValue"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "OwnerEmployeeName": {
              "$ref": "#/definitions/StringValue"
            },
            "ParentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Products": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityProduct"
              }
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "Reason": {
              "$ref": "#/definitions/StringValue"
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "Source": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceCampaign": {
              "$ref": "#/definitions/StringValue"
            },
            "Stage": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityTaxDetail"
              }
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Total": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WeightTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WorkgroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "OpportunityContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Fax": {
              "$ref": "#/definitions/StringValue"
            },
            "FaxType": {
              "$ref": "#/definitions/StringValue"
            },
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone3Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Position": {
              "$ref": "#/definitions/StringValue"
            },
            "Title": {
              "$ref": "#/definitions/StringValue"
            },
            "WebSite": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "OpportunityDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "DisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "Estimation": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Probability": {
              "$ref": "#/definitions/IntValue"
            },
            "Stage": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            },
            "Total": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "OpportunityDiscount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DiscountableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/StringValue"
            },
            "FreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SequenceID": {
              "$ref": "#/definitions/StringValue"
            },
            "SkipDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "OpportunityProduct": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Discount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountSequence": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OpportunityProductID": {
              "$ref": "#/definitions/IntValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "SkipLineDiscounts": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "OpportunityTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "IncludeInVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "OrderRisks": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Message": {
              "$ref": "#/definitions/StringValue"
            },
            "Recommendation": {
              "$ref": "#/definitions/StringValue"
            },
            "Score": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "PayGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BenefitExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningsSub": {
              "$ref": "#/definitions/StringValue"
            },
            "IsDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PayGroupID": {
              "$ref": "#/definitions/StringValue"
            },
            "PayGroupName": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOAssetAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOAssetSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PTOLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxLiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxLiabilitySub": {
              "$ref": "#/definitions/StringValue"
            },
            "UserRole": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Payment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ApplicationHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentApplicationHistoryDetail"
              }
            },
            "AppliedToDocuments": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CardAccountNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Charges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentCharge"
              }
            },
            "CreditCardProcessingInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreditCardProcessingDetail"
              }
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocumentsToApply": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IsCCPayment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrdersToApply": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrderDetail"
              }
            },
            "PaymentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ProcessingCenterID": {
              "$ref": "#/definitions/StringValue"
            },
            "SaveCard": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreditCardTransactionInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreditCardTransactionDetail"
              }
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigTransaction": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "IsNewCard": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "AvailableBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppliedToOrders": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "PaymentApplicationHistoryDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdjustedDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustedRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustingDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustingRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustmentNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "AdjustsVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApplicationPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BalanceWriteOff": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BatchNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscountBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CashDiscountTaken": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DisplayDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "DisplayRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "VATCreditMemo": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PaymentCharge": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "EntryTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SubID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PaymentDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BalanceWriteOff": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountTaken": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "WriteOffReasonCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PaymentMethod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AllowedCashAccounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethodAllowedCashAccountDetail"
              }
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "IntegratedProcessing": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MeansOfPayment": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentMethodID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProcessingCenters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethodProcessingCenterDetail"
              }
            },
            "RequireRemittanceInformationforCashAccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseInAP": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseInAR": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseInPR": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SetPaymentDatetoBankTransactionDate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SettingsForPR": {
              "$ref": "#/definitions/SettingsForPR"
            }
          }
        }
      ]
    },
    "PaymentMethodAllowedCashAccountDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "APDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "APLastRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "APSuggestNextNbr": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ARDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ARDefaultForRefund": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ARLastRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ARSuggestNextNbr": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BatchLastRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "UseInAP": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseInAR": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UseInPR": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "PaymentMethodProcessingCenterDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ProcCenterID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PaymentOrderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppliedToOrder": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PaymentPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FinYear": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PayPeriodID": {
              "$ref": "#/definitions/StringValue"
            },
            "PeriodNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TransactionDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "PayPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NumberofPeriods": {
              "$ref": "#/definitions/ShortValue"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PayGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentPeriods": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentPeriod"
              }
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Year": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PayrollBatch": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchID": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionsAndBenefitsDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BatchDeductionOrBenefitDetail"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BatchEarningDetail"
              }
            },
            "EmployeeSummary": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePaycheckSummary"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NumberofEmployees": {
              "$ref": "#/definitions/IntValue"
            },
            "OvertimeRules": {
              "$ref": "#/definitions/BatchOvertimeRules"
            },
            "PayGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "PayPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalEarnings": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalHourQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PayrollType": {
              "$ref": "#/definitions/StringValue"
            },
            "PeriodEnd": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PeriodStart": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "PayrollUnionLocal": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DeductionsAndBenefits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnionDeductionOrBenefitDetail"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningRates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnionEarningRateDetail"
              }
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "PayrollUnionLocalID": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PayrollWCCCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCode"
              }
            }
          }
        }
      ]
    },
    "PhysicalInventoryCount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhysicalInventoryCountDetail"
              }
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PhysicalInventoryCountDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BookQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "PhysicalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PhysicalInventoryReview": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhysicalInventoryReviewDetail"
              }
            },
            "FreezeDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalPhysicalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalVarianceCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalVarianceQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PhysicalInventoryReviewDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BookQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExtendedVarianceCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "PhysicalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TagNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VarianceQty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProFormaFinancialDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ARDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ARRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscountDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerUsageType": {
              "$ref": "#/definitions/StringValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProFormaInvoice": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountDue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApprovalDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            },
            "BillingSettings": {
              "$ref": "#/definitions/BillToSettings"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "FinancialDetails": {
              "$ref": "#/definitions/ProFormaFinancialDetails"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InvoiceDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InvoiceTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ProgressBilling": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProgressBilling"
              }
            },
            "ProgressBillingTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "RetainageTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProFormaTaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TimeAndMaterial": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeAndMaterial"
              }
            },
            "TimeAndMaterialTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProFormaTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RetainedTax": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainedTaxable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProgressBilling": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AmountToInvoice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrentInvoiced": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeferralCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DraftInvoicesAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "PreviouslyInvoiced": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Retainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainageAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StoredMaterial": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalCompleted": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "Project": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActivityHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectActivity"
              }
            },
            "ApprovalDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            },
            "Assets": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "Balances": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectBalance"
              }
            },
            "BillingAndAllocationSettings": {
              "$ref": "#/definitions/ProjectBillingAndAllocationSettings"
            },
            "BillToSettings": {
              "$ref": "#/definitions/BillToSettings"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Employees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEmployee"
              }
            },
            "Equipments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEquipment"
              }
            },
            "Expenses": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "GLAccounts": {
              "$ref": "#/definitions/ProjectGLAccount"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Income": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Invoices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectProFormaDetails"
              }
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Liabilities": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectProperties": {
              "$ref": "#/definitions/ProjectProperties"
            },
            "ProjectTemplateID": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocals": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectUnionLocal"
              }
            },
            "VisibilitySettings": {
              "$ref": "#/definitions/VisibilitySettings"
            },
            "Retainage": {
              "$ref": "#/definitions/ProjectRetainage"
            },
            "ProjectAddress": {
              "$ref": "#/definitions/ProjectAddress"
            }
          }
        }
      ]
    },
    "ProjectActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "Category": {
              "$ref": "#/definitions/StringValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Workgroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectAddress": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AddressLine1": {
              "$ref": "#/definitions/StringValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "PostalCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Latitude": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Longitude": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectBalance": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualOpenCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BudgetedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Performance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VarianceAmount": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectBillingAndAllocationSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllocationRule": {
              "$ref": "#/definitions/StringValue"
            },
            "AutomaticallyReleaseARDocuments": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillingPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CreateProFormaOnBilling": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastBillingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NextBillingDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RateTable": {
              "$ref": "#/definitions/StringValue"
            },
            "RunAllocationOnReleaseOfProjectTransactions": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "UseTMRevenueBudgetLimits": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillingCurrency": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectBudget": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "ActualAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualPlusOpenCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ActualQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AutoCompleted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BudgetedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BudgetedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedCOQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedInvoicedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedOpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommittedReceivedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Completed": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostAtCompletion": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostToComplete": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DraftInvoicesAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastCostAtCompletion": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastCostToComplete": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastPercentageOfCompletion": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalBudgetedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalCommittedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PendingInvoiceAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PercentageOfCompletion": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Performance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Retainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevenueTask": {
              "$ref": "#/definitions/IntValue"
            },
            "RevisedBudgetedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedBudgetedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RevisedCommittedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "VarianceAmount": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectEmployee": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Department": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectEquipment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EquipmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "RunRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RunRateItem": {
              "$ref": "#/definitions/StringValue"
            },
            "SetupRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SetupRateItem": {
              "$ref": "#/definitions/StringValue"
            },
            "SuspendRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SuspendRateItem": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectGLAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultCostAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultCostSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultTaskForGLAccounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefaultTaskForGLAccount"
              }
            }
          }
        }
      ]
    },
    "ProjectProFormaDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ARDocDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ARDocDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "ARDocOriginalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ARDocStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ARDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ARReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OpenARBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OriginalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalRetainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaidRetainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProFormaDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ProFormaReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "RetainageInvoice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnpaidRetainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnreleasedRetainage": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CertifiedJob": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ChangeOrderWorkflow": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastRevenueChangeNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectManager": {
              "$ref": "#/definitions/StringValue"
            },
            "RestrictEmployees": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RestrictEquipment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RevenueBudgetLevel": {
              "$ref": "#/definitions/StringValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TrackProductionData": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostBudgetLevel": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivityApprover": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectCurrency": {
              "$ref": "#/definitions/StringValue"
            },
            "RateType": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryTrackingMode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "RevenueTaxZone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectRetainage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RetainageMode": {
              "$ref": "#/definitions/StringValue"
            },
            "IncludeCO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseSteps": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CapPct": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CapAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainagePct": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContractTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CompletedPct": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActivityHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectActivity"
              }
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BillingAndAllocationSettings": {
              "$ref": "#/definitions/ProjectTaskBillingAndAllocationSettings"
            },
            "CRMLink": {
              "$ref": "#/definitions/ProjectTaskToCRMLink"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DefaultValues": {
              "$ref": "#/definitions/ProjectTaskDefaultValues"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Properties": {
              "$ref": "#/definitions/ProjectTaskProperties"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "VisibilitySettings": {
              "$ref": "#/definitions/VisibilitySettings"
            }
          }
        }
      ]
    },
    "ProjectTaskBillingAndAllocationSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllocationRule": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingOption": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "BillSeparately": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "RateTable": {
              "$ref": "#/definitions/StringValue"
            },
            "WIPAccountGroup": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectTaskDefaultValues": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultCostAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultCostSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectTaskProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Approver": {
              "$ref": "#/definitions/StringValue"
            },
            "Completed": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CompletionMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PlannedEndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PlannedStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "ProjectTaskToCRMLink": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountedCampaign": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BillingAndAllocationSettings": {
              "$ref": "#/definitions/ProjectBillingAndAllocationSettings"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Employees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEmployee"
              }
            },
            "Equipments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEquipment"
              }
            },
            "GLAccounts": {
              "$ref": "#/definitions/ProjectGLAccount"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ProjectProperties": {
              "$ref": "#/definitions/ProjectProperties"
            },
            "ProjectTemplateID": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "VisibilitySettings": {
              "$ref": "#/definitions/VisibilitySettings"
            }
          }
        }
      ]
    },
    "ProjectTemplateTask": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BillingAndAllocationSettings": {
              "$ref": "#/definitions/ProjectTaskBillingAndAllocationSettings"
            },
            "DefaultValues": {
              "$ref": "#/definitions/ProjectTaskDefaultValues"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ProjectTemplateID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTemplateTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Properties": {
              "$ref": "#/definitions/ProjectTemplateTaskProperties"
            },
            "VisibilitySettings": {
              "$ref": "#/definitions/VisibilitySettings"
            }
          }
        }
      ]
    },
    "ProjectTemplateTaskProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Approver": {
              "$ref": "#/definitions/StringValue"
            },
            "AutomaticallyIncludeInProject": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CompletionMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "ProjectTransaction": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTransactionDetail"
              }
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Module": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalDocNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalBillableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ProjectTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountGroupDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "Allocated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BatchNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Billed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DebitAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DebitSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "EndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "FinPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "Multiplier": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Released": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TransactionID": {
              "$ref": "#/definitions/LongValue"
            },
            "UnitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "UseBillableQtyInAmountFormula": {
              "$ref": "#/definitions/BooleanValue"
            },
            "VendorOrCustomer": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ProjectUnionLocal": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocalID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PTOBank": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccrualLimit": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AccrualMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrueonCertifiedJobOnly": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AllowNegativeBalance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BankStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CanOnlyDisbursefromCarryover": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CarryoverAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CarryoverType": {
              "$ref": "#/definitions/StringValue"
            },
            "CreateFinTransactions": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DefaultAccrualPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DefaultDisbursingType": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DisbursingEarningCode": {
              "$ref": "#/definitions/StringValue"
            },
            "FrontLoadingAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "GLAccounts": {
              "$ref": "#/definitions/PTOBankGLAccounts"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OnSettlement": {
              "$ref": "#/definitions/StringValue"
            },
            "PayCarryoverafterMonths": {
              "$ref": "#/definitions/IntValue"
            },
            "PTOBankID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PTOBankGLAccounts": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AssetAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "AssetSub": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpenseSub": {
              "$ref": "#/definitions/StringValue"
            },
            "LiabilityAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LiabilitySub": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchaseOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ControlTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyEffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseOrderDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IsTaxValid": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "PromisedOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShippingInstructions": {
              "$ref": "#/definitions/ShippingInstructions"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseOrderTaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorRef": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorTaxZone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchaseOrderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AlternateID": {
              "$ref": "#/definitions/StringValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculateDiscountsOnImport": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Cancelled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Completed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CompleteOn": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "MaxReceiptPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinReceiptPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigPONbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigPOType": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Promised": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "QtyOnReceipts": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReceiptAction": {
              "$ref": "#/definitions/StringValue"
            },
            "ReceivedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Requested": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchaseOrderTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RetainedTaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainedTaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "PurchaseReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "BillDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ControlQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreateBill": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyEffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseReceiptDetail"
              }
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InventoryRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ProcessReturnWithOriginalCost": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UnbilledQuantity": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchaseReceiptDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "AccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchaseReceiptDetailAllocation"
              }
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EditableUnitCost": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EstimatedINExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FinalINExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "POLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "POOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "POReceiptLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "POReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ReceiptQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "TransferOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TransferOrderLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "TransferOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "TransferShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchaseReceiptDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReceiptNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "PurchaseSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "POSiteID": {
              "$ref": "#/definitions/StringValue"
            },
            "POSource": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "PurchasingDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "POOrderLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "POOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Selected": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "RelationDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AddToCc": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ContactDisplayName": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactID": {
              "$ref": "#/definitions/IntValue"
            },
            "Document": {
              "$ref": "#/definitions/GuidValue"
            },
            "DocumentTargetNoteIDDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "Primary": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RelationID": {
              "$ref": "#/definitions/IntValue"
            },
            "Role": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ReminderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "IsActive": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RemindAtDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RemindAtTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "ReplenishmentParameterStockItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DemandForecastModel": {
              "$ref": "#/definitions/StringValue"
            },
            "ForecastPeriodType": {
              "$ref": "#/definitions/StringValue"
            },
            "LaunchDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MaxQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxShelfLifeInDays": {
              "$ref": "#/definitions/IntValue"
            },
            "Method": {
              "$ref": "#/definitions/StringValue"
            },
            "PeriodsToAnalyze": {
              "$ref": "#/definitions/IntValue"
            },
            "ReorderPoint": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReplenishmentClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentWarehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "SafetyStock": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Seasonality": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceLevel": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Source": {
              "$ref": "#/definitions/StringValue"
            },
            "TerminationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TransferERQ": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ReportingGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "GroupType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoice": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ApplicationsCreditMemo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceApplicationCreditMemo"
              }
            },
            "ApplicationsInvoice": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceApplicationInvoice"
              }
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillingSettings": {
              "$ref": "#/definitions/BillToSettings"
            },
            "CashDiscount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Commissions": {
              "$ref": "#/definitions/SalesInvoiceCommissions"
            },
            "CreditHold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceDetail"
              }
            },
            "DetailTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceDiscountDetails"
              }
            },
            "DiscountTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "IsTaxValid": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FinancialDetails": {
              "$ref": "#/definitions/SalesInvoiceFinancialDetails"
            },
            "FreightDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceFreightDetail"
              }
            },
            "FreightPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaymentTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceTaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "VATExemptTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATTaxableTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceApplicationCreditMemo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceApplicationInvoice": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdjustedDocReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustingDocReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AdjustmentNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "AmountPaid": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashDiscountTaken": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "DocumentType": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PaymentPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceCommissions": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CommissionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SalesPersons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesInvoiceSalesPersonDetail"
              }
            },
            "TotalCommissionableAmount": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculateDiscountsOnImport": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigInvLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "OrigInvNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigInvType": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TransactionDescr": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExternalDiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/StringValue"
            },
            "FreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "SequenceID": {
              "$ref": "#/definitions/StringValue"
            },
            "SkipDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceFinancialDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceFreightDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PremiumFreightAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipmentType": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalFreightAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Volume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Weight": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceSalesPersonDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CommissionableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommissionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommissionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesInvoiceTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Approved": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "BillToAddress": {
              "$ref": "#/definitions/Address"
            },
            "BillToAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillToAddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "BillToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Commissions": {
              "$ref": "#/definitions/Commissions"
            },
            "ContactID": {
              "$ref": "#/definitions/StringValue"
            },
            "ControlTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreditHold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DestinationWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderDetail"
              }
            },
            "DisableAutomaticDiscountUpdate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DisableAutomaticTaxCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DiscountDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrdersDiscountDetails"
              }
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "FinancialSettings": {
              "$ref": "#/definitions/FinancialSettings"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IsTaxValid": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModified": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "MaxRiskScore": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderRisks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderRisks"
              }
            },
            "OrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Payments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderPayment"
              }
            },
            "PreferredWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Relations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelationDetail"
              }
            },
            "RequestedOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Shipments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderShipment"
              }
            },
            "ShippingSettings": {
              "$ref": "#/definitions/ShippingSettings"
            },
            "ShipToAddress": {
              "$ref": "#/definitions/Address"
            },
            "ShipToAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipToAddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "ShipToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxDetail"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totals": {
              "$ref": "#/definitions/Totals"
            },
            "VATExemptTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATTaxableTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExternalOrderOriginal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExternalRefundRef": {
              "$ref": "#/definitions/StringValue"
            },
            "WillCall": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "UsrExternalOrderOriginal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExternalOrderOrigin": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalOrderSource": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCalcMode": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDate": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "SalesOrderCreditCardTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AuthNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtProfileId": {
              "$ref": "#/definitions/StringValue"
            },
            "NeedValidation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TranDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "TranType": {
              "$ref": "#/definitions/StringValue"
            },
            "CardType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesOrderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderDetailAllocation"
              }
            },
            "AlternateID": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AutoCreateIssue": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AverageCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CalculateDiscountsOnImport": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Commissionable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Completed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountedUnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtendedPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceType": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDate": {
              "$ref": "#/definitions/StringValue"
            },
            "LineDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MarkForPO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Operation": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OvershipThreshold": {
              "$ref": "#/definitions/DecimalValue"
            },
            "POSource": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchaseWarehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasingDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchasingDetail"
              }
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyOnShipments": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "RequestedOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            },
            "SchedOrderDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShipOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipToLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "UnbilledAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UndershipThreshold": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "AssociatedOrderLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "GiftMessage": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualPrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesOrderDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AllocWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Completed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomerOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyOnShipments": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyReceived": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RelatedDocument": {
              "$ref": "#/definitions/StringValue"
            },
            "SchedOrderDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShipOn": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesOrderPayment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "AppliedToOrder": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Authorize": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Balance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CardAccountNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Capture": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "CreditCardTransactionInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderCreditCardTransactionDetail"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocType": {
              "$ref": "#/definitions/StringValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OrigTransactionNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ProcessingCenterID": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Refund": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SaveCard": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TransferredtoInvoice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ValidateCCRefundOrigTransaction": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "SalesOrdersDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountableQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExternalDiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/StringValue"
            },
            "FreeItemQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SequenceID": {
              "$ref": "#/definitions/StringValue"
            },
            "SkipDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesOrderShipment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceType": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipmentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipmentType": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OrderNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "ShippingNoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "Salesperson": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DefaultCommission": {
              "$ref": "#/definitions/DecimalValue"
            },
            "IsActive": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesPersonDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CommissionableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommissionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CommissionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SalespersonID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesPriceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Price": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PriceCode": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceType": {
              "$ref": "#/definitions/StringValue"
            },
            "Promotion": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "Tax": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCalculationMode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesPricesInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EffectiveAsOf": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceCode": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceManager": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceManagerIsMe": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PriceType": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceWorkgroupIsMine": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SalesPriceDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesPriceDetail"
              }
            },
            "TaxCalculationMode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesPricesWorksheetDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineID": {
              "$ref": "#/definitions/IntValue"
            },
            "PendingPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PriceCode": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceType": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SourcePrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Tax": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SalesPriceWorksheet": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OverwriteOverlappingPrices": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesPrices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesPricesWorksheetDetail"
              }
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ServiceOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Address": {
              "$ref": "#/definitions/SrvOrdAddress"
            },
            "AppointmentDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "Appointments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdAppointments"
              }
            },
            "AppointmentsNeeded": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdAttributes"
              }
            },
            "BillableTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BranchLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "Contact": {
              "$ref": "#/definitions/SrvOrdContact"
            },
            "ContractInfo": {
              "$ref": "#/definitions/SrvOrdContractInfo"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "Customer": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomerOrder": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DefaultProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultStaff": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdDefaultStaff"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdDetails"
              }
            },
            "EstimatedDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalReference": {
              "$ref": "#/definitions/StringValue"
            },
            "FinancialDetails": {
              "$ref": "#/definitions/SrvOrdFinancialDetails"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "OtherInformation": {
              "$ref": "#/definitions/SrvOrdOtherInformation"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Prepayments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdPrepayments"
              }
            },
            "Priority": {
              "$ref": "#/definitions/StringValue"
            },
            "Problem": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Severity": {
              "$ref": "#/definitions/StringValue"
            },
            "SLA": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "SLATime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Supervisor": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SrvOrdTaxDetails"
              }
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Totals": {
              "$ref": "#/definitions/SrvOrdTotals"
            },
            "WaitingforPurchasedItems": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WorkflowStage": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SettingsForPR": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ExportScenario": {
              "$ref": "#/definitions/StringValue"
            },
            "PRProcessing": {
              "$ref": "#/definitions/StringValue"
            },
            "Report": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Shipment": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "ControlQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyViewState": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomerID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreateNewShipmentForEveryOrder": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentDetail"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "OverrideFreightPrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FreightPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "GroundCollect": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Insurance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "Operation": {
              "$ref": "#/definitions/StringValue"
            },
            "Orders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentOrderDetail"
              }
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "PackageCount": {
              "$ref": "#/definitions/IntValue"
            },
            "Packages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentPackage"
              }
            },
            "PackageWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Picked": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ResidentialDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SaturdayDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipmentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippingSettings": {
              "$ref": "#/definitions/ShipToSettings"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingZoneID": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "ToWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UseCustomersAccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkgroupID": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "ShipmentDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentDetailAllocation"
              }
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FreeItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OpenQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "OriginalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShipmentDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "SplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShipmentOrderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryDocType": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceType": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipmentType": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShippedWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderNoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "ShipmentPackage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BoxID": {
              "$ref": "#/definitions/StringValue"
            },
            "CODAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Confirmed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomRefNbr1": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomRefNbr2": {
              "$ref": "#/definitions/StringValue"
            },
            "DeclaredValue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "TrackingNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Weight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Length": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Width": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Height": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PackageContents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentPackageDetail"
              }
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            }
          }
        }
      ]
    },
    "ShipmentPackageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrigOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Quantity": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ShipmentSplitLineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShippingBox": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ActiveByDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BoxID": {
              "$ref": "#/definitions/StringValue"
            },
            "BoxWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CarriersPackage": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Height": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Length": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VolumeUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WeightUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Width": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LinearUOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShippingInstructions": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ShippingDestinationType": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipTo": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipToAddress": {
              "$ref": "#/definitions/Address"
            },
            "ShipToAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipToAddressValidated": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "ShipToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShippingSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CancelByDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Canceled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "GroundCollect": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Insurance": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PreferredWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Priority": {
              "$ref": "#/definitions/ShortValue"
            },
            "ResidentialDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SaturdayDelivery": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ScheduledShipmentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ShippingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingZone": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipSeparately": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "ShopForRates": {
              "$ref": "#/definitions/ShopForRates"
            },
            "UseCustomersAccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FreightPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCostIsuptodate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FreightTaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverrideFreightPrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PackageWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PremiumFreight": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ShippingTerm": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingTermDetail"
              }
            },
            "TermID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShippingTermDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InvoiceAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineHandling": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ShippingandHandling": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ShippingZones": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ZoneID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShipToSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ShipToAddress": {
              "$ref": "#/definitions/Address"
            },
            "ShipToAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShipToContact": {
              "$ref": "#/definitions/DocContact"
            },
            "ShipToContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Validated": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "ShipVia": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "Calendar": {
              "$ref": "#/definitions/StringValue"
            },
            "CarrierID": {
              "$ref": "#/definitions/StringValue"
            },
            "CommonCarrier": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightRates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipViaFreightRate"
              }
            },
            "FreightSalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightSalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Packages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingBox"
              }
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShipViaFreightRate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Rate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Volume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Weight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ZoneID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "ShopForRates": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "IsManualPackage": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PackageWeight": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "ShopifyStore": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccessToken": {
              "$ref": "#/definitions/StringValue"
            },
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "APIKey": {
              "$ref": "#/definitions/StringValue"
            },
            "APIPassword": {
              "$ref": "#/definitions/StringValue"
            },
            "Connector": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SharedSecret": {
              "$ref": "#/definitions/StringValue"
            },
            "StoreAdminURL": {
              "$ref": "#/definitions/StringValue"
            },
            "StoreName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdAddress": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AddressLine1": {
              "$ref": "#/definitions/StringValue"
            },
            "AddressLine2": {
              "$ref": "#/definitions/StringValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "PostalCode": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdAppointments": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Confirmed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ScheduledEndDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledEndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledStartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ScheduledStartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attribute": {
              "$ref": "#/definitions/StringValue"
            },
            "RefNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdContact": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attention": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdContractInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ContractPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceContract": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdDefaultStaff": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Comment": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ServiceLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "StaffMemberID": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppointmentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AppointmentCount": {
              "$ref": "#/definitions/IntValue"
            },
            "AppointmentDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "AppointmentEstimatedDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "AppointmentQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillingRule": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "ComponentID": {
              "$ref": "#/definitions/StringValue"
            },
            "ComponentLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CoveredQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EquipmentAction": {
              "$ref": "#/definitions/StringValue"
            },
            "EquipmentActionComment": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedDuration": {
              "$ref": "#/definitions/StringValue"
            },
            "EstimatedQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExtPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastReference": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LineStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "LineType": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ManualPrice": {
              "$ref": "#/definitions/BooleanValue"
            },
            "MarkforPO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ModelEquipmentLineRef": {
              "$ref": "#/definitions/StringValue"
            },
            "OverageQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverageUnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "POCompleted": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PONbr": {
              "$ref": "#/definitions/StringValue"
            },
            "POStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaidItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceContractItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ServiceOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "SortOrder": {
              "$ref": "#/definitions/IntValue"
            },
            "StaffMemberID": {
              "$ref": "#/definitions/StringValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "TargetEquipmentID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "Warranty": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "SrvOrdFinancialDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillingCustomer": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingCycle": {
              "$ref": "#/definitions/StringValue"
            },
            "BillingLocation": {
              "$ref": "#/definitions/StringValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Commissionable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "RunBillingFor": {
              "$ref": "#/definitions/StringValue"
            },
            "Salesperson": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCalculationMode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdOtherInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BatchNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DocumentType": {
              "$ref": "#/definitions/StringValue"
            },
            "InvoiceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "IssueReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdPrepayments": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "AppliedtoOrders": {
              "$ref": "#/definitions/DecimalValue"
            },
            "AvailableBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CashAccount": {
              "$ref": "#/definitions/IntValue"
            },
            "Currency": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentRef": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SourceAppointmentNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Type": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdTaxDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "IncludeinVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ServiceOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceOrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SrvOrdTotals": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AppointmentTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BillableTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EstimatedTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentApplied": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentReceived": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaymentRemaining": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderBillableUnpaidBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ServiceOrderUnpaidBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATExemptTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VATTaxableTotal": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "StatementCycle": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AgingPeriod1EndDay": {
              "$ref": "#/definitions/ShortValue"
            },
            "AgingPeriod1Message": {
              "$ref": "#/definitions/StringValue"
            },
            "AgingPeriod2EndDay": {
              "$ref": "#/definitions/ShortValue"
            },
            "AgingPeriod2Message": {
              "$ref": "#/definitions/StringValue"
            },
            "AgingPeriod3EndDay": {
              "$ref": "#/definitions/ShortValue"
            },
            "AgingPeriod3Message": {
              "$ref": "#/definitions/StringValue"
            },
            "AgingPeriod4Message": {
              "$ref": "#/definitions/StringValue"
            },
            "ApplyOverdueCharges": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CycleID": {
              "$ref": "#/definitions/StringValue"
            },
            "DayOfMonth": {
              "$ref": "#/definitions/ShortValue"
            },
            "DayOfMonth1": {
              "$ref": "#/definitions/ShortValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastStatementDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OverdueChargeID": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepareOn": {
              "$ref": "#/definitions/StringValue"
            },
            "RequireOverdueChargesCalculationBeforeStatement": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RequirePaymentApplicationBeforeStatementProcessing": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "StockItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ABCCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "AutoIncrementalValue": {
              "$ref": "#/definitions/StringValue"
            },
            "AverageCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Boxes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoxStockItem"
              }
            },
            "Categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryStockItem"
              }
            },
            "COGSAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "COGSSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Content": {
              "$ref": "#/definitions/StringValue"
            },
            "CountryOfOrigin": {
              "$ref": "#/definitions/StringValue"
            },
            "CrossReferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryItemCrossReference"
              }
            },
            "CurrentStdCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DefaultIssueLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DefaultReceiptLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultSubitem": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "DeferralAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DeferralSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DimensionVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DimensionWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ImageUrl": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventorySubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "IsAKit": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ItemClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemType": {
              "$ref": "#/definitions/StringValue"
            },
            "LandedCostVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LandedCostVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LastCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastModified": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastStdCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LotSerialClass": {
              "$ref": "#/definitions/StringValue"
            },
            "Markup": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinMarkup": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PackagingOption": {
              "$ref": "#/definitions/StringValue"
            },
            "PackSeparately": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PendingStdCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "POAccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "POAccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PostingClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceClass": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceManager": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductManager": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "ReasonCodeSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentParameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplenishmentParameterStockItem"
              }
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostRevaluationAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostRevaluationSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SubjectToCommission": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TariffCode": {
              "$ref": "#/definitions/StringValue"
            },
            "UOMConversions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryItemUOMConversion"
              }
            },
            "UseOnEntry": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ValuationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemVendorDetail"
              }
            },
            "VolumeUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemWarehouseDetail"
              }
            },
            "WeightUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "CurySpecificMSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurySpecificPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Availability": {
              "$ref": "#/definitions/StringValue"
            },
            "CustomURL": {
              "$ref": "#/definitions/StringValue"
            },
            "ExportToExternal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FileURLs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryFileUrls"
              }
            },
            "MetaDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "MetaKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "PageTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "SearchKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "TemplateItemID": {
              "$ref": "#/definitions/StringValue"
            },
            "Visibility": {
              "$ref": "#/definitions/StringValue"
            },
            "NotAvailable": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "StockItemVendorDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AddLeadTimeDays": {
              "$ref": "#/definitions/ShortValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EOQ": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LastVendorPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LeadTimeDays": {
              "$ref": "#/definitions/ShortValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSize": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxOrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinOrderFrequencyInDays": {
              "$ref": "#/definitions/IntValue"
            },
            "MinOrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PurchaseUnit": {
              "$ref": "#/definitions/StringValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorName": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "StockItemWarehouseDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DailyDemandForecast": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DailyDemandForecastErrorSTDEV": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DefaultIssueLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultReceiptLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventorySubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "IsDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastForecastDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Override": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverridePreferredVendor": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideReplenishmentSettings": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OverrideStdCost": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PreferredVendor": {
              "$ref": "#/definitions/StringValue"
            },
            "PriceOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ProductManager": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyOnHand": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReplenishmentSource": {
              "$ref": "#/definitions/StringValue"
            },
            "ReplenishmentWarehouse": {
              "$ref": "#/definitions/StringValue"
            },
            "Seasonality": {
              "$ref": "#/definitions/StringValue"
            },
            "ServiceLevel": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "StorageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableforIssue": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyHardAvailable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateofWarehouseQty": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "QtyOnHand": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "StorageDetailByLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyAvailableinLocation": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableforIssueinLocation": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableforShippinginLocation": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateofLocationQty": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "QtyOnHandinLocation": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableinWarehouse": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableforIssueinWarehouse": {
              "$ref": "#/definitions/DecimalValue"
            },
            "QtyAvailableforShippinginWarehouse": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateofWarehouseQty": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "QtyOnHandinWarehouse": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "StorageDetailsByLocationInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "SplitByLocation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StorageDetailsByLocation": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageDetailByLocation"
              }
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "StorageDetailsInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "StorageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageDetail"
              }
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Subaccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Secured": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SubaccountCD": {
              "$ref": "#/definitions/StringValue"
            },
            "SubaccountID": {
              "$ref": "#/definitions/IntValue"
            }
          }
        }
      ]
    },
    "Subcontract": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "SubcontractNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "Location": {
              "$ref": "#/definitions/StringValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "BaseCurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyEffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyRateTypeID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyReciprocalRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VendorRef": {
              "$ref": "#/definitions/StringValue"
            },
            "LineTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainageTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SubcontractTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ControlTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "ApplyRetainage": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RetainagePct": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DoNotEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "DoNotPrint": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Emailed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Printed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubcontractDetail"
              }
            },
            "TaxDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubcontractTaxDetail"
              }
            },
            "VendorAddressInfo": {
              "$ref": "#/definitions/SubcontractVendorAddressInfo"
            },
            "VendorContactInfo": {
              "$ref": "#/definitions/SubcontractVendorContactInfo"
            }
          }
        }
      ]
    },
    "SubcontractDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/StringValue"
            },
            "AlternateID": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "Canceled": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Closed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Completed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountPct": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DiscountSequence": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtendedCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "ManualCost": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ManualDiscount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "PrepaidAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PrepaidQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "Task": {
              "$ref": "#/definitions/StringValue"
            },
            "Requested": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RetainageAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainagePct": {
              "$ref": "#/definitions/DecimalValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Subaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SubcontractTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "RetainedTax": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainedTaxable": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SubcontractVendorAddressInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AddressLine1": {
              "$ref": "#/definitions/StringValue"
            },
            "AddressLine2": {
              "$ref": "#/definitions/StringValue"
            },
            "City": {
              "$ref": "#/definitions/StringValue"
            },
            "Country": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PostalCode": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "SubcontractVendorContactInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Phone": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Task": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Body": {
              "$ref": "#/definitions/StringValue"
            },
            "Category": {
              "$ref": "#/definitions/StringValue"
            },
            "CompletedAt": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CompletionPercentage": {
              "$ref": "#/definitions/IntValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Internal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "Owner": {
              "$ref": "#/definitions/StringValue"
            },
            "Parent": {
              "$ref": "#/definitions/GuidValue"
            },
            "ParentSummary": {
              "$ref": "#/definitions/StringValue"
            },
            "Priority": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedActivities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDetail"
              }
            },
            "RelatedTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskRelatedTask"
              }
            },
            "Reminder": {
              "$ref": "#/definitions/ReminderDetail"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeActivity": {
              "$ref": "#/definitions/TaskTimeActivity"
            },
            "WorkgroupID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedByID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RelatedEntityType": {
              "$ref": "#/definitions/StringValue"
            },
            "RelatedEntityNoteID": {
              "$ref": "#/definitions/GuidValue"
            },
            "RelatedEntityDescription": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaskRelatedTask": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CompletedAt": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DueDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "Subject": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaskTimeActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Tax": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CalculateOn": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscount": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DeductibleVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EnterFromTaxBill": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ExcludeFromTaxonTaxCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IncludeInVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IncludeInVATTaxableTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NotValidAfter": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxAgency": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxClaimableAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxClaimableSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxPayableAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxPayableSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxSchedule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxScheduleDetail"
              }
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            },
            "Zones": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxZoneDetail"
              }
            }
          }
        }
      ]
    },
    "TaxAndReportingCA": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ReportingType": {
              "$ref": "#/definitions/StringValue"
            },
            "SupplementalIncome": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxDetailsCA": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningCodeTaxDetailCA"
              }
            },
            "WageType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxAndReportingUS": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ReportingType": {
              "$ref": "#/definitions/StringValue"
            },
            "SubjecttoTaxes": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetailsUS": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningCodeTaxDetailUS"
              }
            },
            "WageType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCategoryTaxDetail"
              }
            },
            "ExcludeListedTaxes": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxCategoryID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxCategoryTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CalculateOn": {
              "$ref": "#/definitions/StringValue"
            },
            "CashDiscount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxCodeSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdditionalInformation": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyNotes": {
              "$ref": "#/definitions/StringValue"
            },
            "FormBox": {
              "$ref": "#/definitions/StringValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UseDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CustomerTaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "IncludeInVATExemptTotal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "OrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "PendingVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "ReverseVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "StatisticalVAT": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxesDecreasingApplWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "EmployeeTaxesDecreasingApplWageDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxesDecreasingApplWageDetail"
              }
            },
            "InclusionType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxesDecreasingApplWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxReportingSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ReportingGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportingGroup"
              }
            },
            "TaxAgency": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxScheduleDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductibleTaxRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxTaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinTaxableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReportingGroup": {
              "$ref": "#/definitions/StringValue"
            },
            "RevisionID": {
              "$ref": "#/definitions/IntValue"
            },
            "StartDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "TaxSettingDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AdditionalInformation": {
              "$ref": "#/definitions/StringValue"
            },
            "CompanyNotes": {
              "$ref": "#/definitions/StringValue"
            },
            "FormBox": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Name": {
              "$ref": "#/definitions/StringValue"
            },
            "Required": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Setting": {
              "$ref": "#/definitions/StringValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "UseDefault": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UsedforGovernmentReporting": {
              "$ref": "#/definitions/BooleanValue"
            },
            "UsedforTaxCalculation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Value": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxSettingsCA": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CodeType": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetailsCA": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeductionOrBenefitTaxDetailCA"
              }
            }
          }
        }
      ]
    },
    "TaxSettingsUS": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AllowSupplementalElection": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CodeType": {
              "$ref": "#/definitions/StringValue"
            },
            "ImpactonTaxableWage": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxDetailsUS": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeductionOrBenefitTaxDetailUS"
              }
            }
          }
        }
      ]
    },
    "TaxZone": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApplicableTaxes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxZoneApplicableTaxDetail"
              }
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TaxZoneID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxZoneApplicableTaxDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TaxZoneDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DefaultTaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZoneID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TemplateItems": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "SalesUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "CurySpecificMSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurySpecificPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ItemClass": {
              "$ref": "#/definitions/StringValue"
            },
            "Availability": {
              "$ref": "#/definitions/StringValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "BaseUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryStockItem"
              }
            },
            "Content": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrentStdCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CustomURL": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultIssueLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "DefaultPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DimensionWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ExportToExternal": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FileURLs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryFileUrls"
              }
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "IsStockItem": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ItemStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModified": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Matrix": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MatrixItems"
              }
            },
            "MetaDescription": {
              "$ref": "#/definitions/StringValue"
            },
            "MSRP": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PageTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "SearchKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "Visibility": {
              "$ref": "#/definitions/StringValue"
            },
            "WeightUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "MetaKeywords": {
              "$ref": "#/definitions/StringValue"
            },
            "RequireShipment": {
              "$ref": "#/definitions/BooleanValue"
            },
            "NotAvailable": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateItemVendorDetail"
              }
            }
          }
        }
      ]
    },
    "TemplateItemVendorDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorName": {
              "$ref": "#/definitions/StringValue"
            },
            "Default": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "TimeActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Approver": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Released": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "TrackTime": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "TimeAndMaterial": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AmountToInvoice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BilledAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "BilledQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DeferralCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "MaxAvailableAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MaxLimitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverLimitAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "QtyToInvoice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Retainage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "RetainageAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "UnitPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TimeEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ApprovalStatus": {
              "$ref": "#/definitions/StringValue"
            },
            "Approver": {
              "$ref": "#/definitions/StringValue"
            },
            "Billable": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BillableOvertime": {
              "$ref": "#/definitions/StringValue"
            },
            "BillableTime": {
              "$ref": "#/definitions/StringValue"
            },
            "CertifiedJob": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "CostRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "EarningType": {
              "$ref": "#/definitions/StringValue"
            },
            "Employee": {
              "$ref": "#/definitions/StringValue"
            },
            "ExternalRefNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Overtime": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTaskID": {
              "$ref": "#/definitions/StringValue"
            },
            "Summary": {
              "$ref": "#/definitions/StringValue"
            },
            "Time": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "TimeEntryID": {
              "$ref": "#/definitions/GuidValue"
            },
            "TimeSpent": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocal": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Totals": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DiscountTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "LineTotalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MiscTotalAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "TaxTotal": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnbilledAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnbilledQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "UnpaidBalance": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Freight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCost": {
              "$ref": "#/definitions/DecimalValue"
            },
            "FreightCostIsuptodate": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FreightTaxCategory": {
              "$ref": "#/definitions/StringValue"
            },
            "OrderVolume": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OrderWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PackageWeight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "PremiumFreight": {
              "$ref": "#/definitions/DecimalValue"
            },
            "OverrideFreightAmount": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "TransferOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransferOrderDetail"
              }
            },
            "ExternalRef": {
              "$ref": "#/definitions/StringValue"
            },
            "FromWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TotalQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ToWarehouseID": {
              "$ref": "#/definitions/StringValue"
            },
            "TransferType": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TransferOrderDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Allocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransferOrderDetailAllocation"
              }
            },
            "CostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FromLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReasonCode": {
              "$ref": "#/definitions/StringValue"
            },
            "SpecialOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            },
            "ToLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "ToCostCode": {
              "$ref": "#/definitions/StringValue"
            },
            "ToCostLayerType": {
              "$ref": "#/definitions/StringValue"
            },
            "ToProject": {
              "$ref": "#/definitions/StringValue"
            },
            "ToProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "ToSpecialOrderNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "TransferOrderDetailAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "LotSerialNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Qty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "SplitLineNumber": {
              "$ref": "#/definitions/IntValue"
            },
            "Subitem": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "UnionDeductionOrBenefitDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ContributionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContributionCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "ContributionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ContributionType": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionAmount": {
              "$ref": "#/definitions/DecimalValue"
            },
            "DeductionAndBenefitCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionPercent": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "UnionEarningRateDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WageRate": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "UnionLocal": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "UnionLocalID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "UnitsOfMeasure": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "ConversionFactor": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "FromUOM": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "MultiplyOrDivide": {
              "$ref": "#/definitions/StringValue"
            },
            "ToUOM": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "Vendor": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AccountRef": {
              "$ref": "#/definitions/StringValue"
            },
            "APAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "APSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeValue"
              }
            },
            "CashAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerContact"
              }
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "CurrencyRateType": {
              "$ref": "#/definitions/StringValue"
            },
            "EnableCurrencyOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "EnableRateOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "F1099Box": {
              "$ref": "#/definitions/StringValue"
            },
            "F1099Vendor": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FATCA": {
              "$ref": "#/definitions/BooleanValue"
            },
            "FOBPoint": {
              "$ref": "#/definitions/StringValue"
            },
            "ForeignEntity": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LandedCostVendor": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LeadTimedays": {
              "$ref": "#/definitions/ShortValue"
            },
            "LegalName": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationName": {
              "$ref": "#/definitions/StringValue"
            },
            "MainContact": {
              "$ref": "#/definitions/Contact"
            },
            "MaxReceipt": {
              "$ref": "#/definitions/DecimalValue"
            },
            "MinReceipt": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ParentAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentBy": {
              "$ref": "#/definitions/StringValue"
            },
            "PaymentInstructions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountPaymentInstructionDetail"
              }
            },
            "PaymentLeadTimedays": {
              "$ref": "#/definitions/ShortValue"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "PaySeparately": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PrimaryContact": {
              "$ref": "#/definitions/Contact"
            },
            "PrintOrders": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReceiptAction": {
              "$ref": "#/definitions/StringValue"
            },
            "ReceivingBranch": {
              "$ref": "#/definitions/StringValue"
            },
            "RemittanceAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RemittanceContact": {
              "$ref": "#/definitions/Contact"
            },
            "RemittanceContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SendOrdersbyEmail": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingContactOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingAddressOverride": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ShippingContact": {
              "$ref": "#/definitions/Contact"
            },
            "ShippingTerms": {
              "$ref": "#/definitions/StringValue"
            },
            "ShipVia": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxCalculationMode": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxRegistrationID": {
              "$ref": "#/definitions/StringValue"
            },
            "TaxZone": {
              "$ref": "#/definitions/StringValue"
            },
            "Terms": {
              "$ref": "#/definitions/StringValue"
            },
            "ThresholdReceipt": {
              "$ref": "#/definitions/DecimalValue"
            },
            "VendorClass": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorID": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorIsLaborUnion": {
              "$ref": "#/definitions/BooleanValue"
            },
            "VendorIsTaxAgency": {
              "$ref": "#/definitions/BooleanValue"
            },
            "VendorName": {
              "$ref": "#/definitions/StringValue"
            },
            "Warehouse": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "VendorClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessAccountClassAttributeDetail"
              }
            },
            "ClassID": {
              "$ref": "#/definitions/StringValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      ]
    },
    "VendorPriceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Price": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Promotional": {
              "$ref": "#/definitions/BooleanValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "VendorPricesInquiry": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "ItemClass": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductManager": {
              "$ref": "#/definitions/StringValue"
            },
            "ProductWorkgroup": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorPriceDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorPriceDetail"
              }
            }
          }
        }
      ]
    },
    "VendorPriceWorksheet": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CreatedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "ExpirationDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Hold": {
              "$ref": "#/definitions/BooleanValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OverwriteOverlappingPrices": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Promotional": {
              "$ref": "#/definitions/BooleanValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Status": {
              "$ref": "#/definitions/StringValue"
            },
            "VendorSalesPrices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorPriceWorksheetDetail"
              }
            }
          }
        }
      ]
    },
    "VendorPriceWorksheetDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "BreakQty": {
              "$ref": "#/definitions/DecimalValue"
            },
            "CurrencyID": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryID": {
              "$ref": "#/definitions/StringValue"
            },
            "LineID": {
              "$ref": "#/definitions/IntValue"
            },
            "PendingPrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "ReferenceNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "SourcePrice": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Tax": {
              "$ref": "#/definitions/StringValue"
            },
            "UOM": {
              "$ref": "#/definitions/StringValue"
            },
            "Vendor": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "VisibilitySettings": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "AP": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AR": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CA": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CRM": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Expenses": {
              "$ref": "#/definitions/BooleanValue"
            },
            "GL": {
              "$ref": "#/definitions/BooleanValue"
            },
            "IN": {
              "$ref": "#/definitions/BooleanValue"
            },
            "PO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SO": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TimeEntries": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "Warehouse": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "COGSExpenseAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "COGSExpenseSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DiscountSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "DropShipLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightChargeAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "FreightChargeSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventoryAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "InventorySubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LandedCostVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LandedCostVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Locations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WarehouseLocation"
              }
            },
            "MiscChargeAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "MiscChargeSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "NonStockPickingLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "OverrideInventoryAccountSubaccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "POAccrualAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "POAccrualSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "PurchasePriceVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ReasonCodeSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ReceivingLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "RMALocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "SalesSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "ShippingLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostRevaluationAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostRevaluationSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostVarianceAccount": {
              "$ref": "#/definitions/StringValue"
            },
            "StandardCostVarianceSubaccount": {
              "$ref": "#/definitions/StringValue"
            },
            "UseItemDefaultLocationForPicking": {
              "$ref": "#/definitions/BooleanValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WarehouseLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AssemblyAllowed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "PickPriority": {
              "$ref": "#/definitions/ShortValue"
            },
            "ReceiptsAllowed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "SalesAllowed": {
              "$ref": "#/definitions/BooleanValue"
            },
            "TransfersAllowed": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "WCCCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCodeCostCodeSources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeCostCodeSource"
              }
            },
            "WCCCodeLaborItemSources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeLaborItemSource"
              }
            },
            "WCCCodeMaxInsurableWages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeMaxInsurableWage"
              }
            },
            "WCCCodeProjectSources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeProjectSource"
              }
            },
            "WCCCodeRates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeRate"
              }
            }
          }
        }
      ]
    },
    "WCCCodeCostCodeSource": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CostCodeFrom": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCodeTo": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "WorkCodeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WCCCodeLaborItemSource": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LaborItem": {
              "$ref": "#/definitions/StringValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WorkCodeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WCCCodeMaxInsurableWage": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductionandBenefitCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "Wage": {
              "$ref": "#/definitions/DecimalValue"
            },
            "WCCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WCCCodeMaxInsurableWageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "DeductionandBenefitCode": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "Wage": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      ]
    },
    "WCCCodeProjectSource": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LineNbr": {
              "$ref": "#/definitions/IntValue"
            },
            "Project": {
              "$ref": "#/definitions/StringValue"
            },
            "ProjectTask": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkCodeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WCCCodeRate": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BenefitCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "BenefitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionCalculationMethod": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionCode": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "RecordID": {
              "$ref": "#/definitions/IntValue"
            },
            "State": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkCodeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WCCCodeRateDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/GuidValue"
            },
            "BenefitRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Branch": {
              "$ref": "#/definitions/StringValue"
            },
            "DeductionRate": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EffectiveDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCodeMaxInsurableWages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WCCCodeMaxInsurableWageDetail"
              }
            }
          }
        }
      ]
    },
    "WorkCalendar": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "CalendarExceptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkCalendarExceptionDetail"
              }
            },
            "CalendarSettings": {
              "$ref": "#/definitions/CalendarSettings"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "TimeZone": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkCalendarID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WorkCalendarExceptionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "DayOfWeek": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "EndTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "StartTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UnpaidBreakTime": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkDay": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      ]
    },
    "WorkClassCompensationCode": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "CostCodeFrom": {
              "$ref": "#/definitions/StringValue"
            },
            "CostCodeTo": {
              "$ref": "#/definitions/StringValue"
            },
            "Description": {
              "$ref": "#/definitions/StringValue"
            },
            "WCCCode": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "WorkLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "$ref": "#/definitions/BooleanValue"
            },
            "AddressInfo": {
              "$ref": "#/definitions/Address"
            },
            "LastModifiedDateTime": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "UseAddressfromBranchID": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkLocationID": {
              "$ref": "#/definitions/StringValue"
            },
            "WorkLocationName": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      ]
    },
    "AccountCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Account"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "AccountDetailsForPeriodInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AccountDetailsForPeriodInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "AccountGroupCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AccountGroup"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "AccountSummaryInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AccountSummaryInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompleteActivity": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Activity"
        }
      }
    },
    "ActivityCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Activity"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CancelAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "CloseAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "CompleteAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "InvoiceAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "AppRecalcExternalTax": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "PauseAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "ReopenAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "StartAppointment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "ResumeAppointmentMenuActions": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "UncloseAppointmentMenuActions": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        }
      }
    },
    "AppointmentCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Appointment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "AttributeDefinitionCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AttributeDefinition"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "BigCommerceStoresCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BigCommerceStores"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseBill": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Bill"
        }
      }
    },
    "ReleaseRetainage": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Bill"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "AmtToRelease": {
              "$ref": "#/definitions/DecimalValue"
            },
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "PostPeriod": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ReverseBill": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Bill"
        }
      }
    },
    "BillCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Bill"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "BudgetCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Budget"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ConvertBusinessAccountToCustomer": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        }
      }
    },
    "MarkBusinessAccountAsValidated": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        }
      }
    },
    "ValidateBusinessAccountAddresses": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        }
      }
    },
    "ChangeBusinessAccountID": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "CheckForBusinessAccountDuplicates": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        }
      }
    },
    "CreateContactFromBusinessAccount": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "BusinessAccountCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/BusinessAccount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CarrierCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Carrier"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseCase": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Case"
        }
      }
    },
    "AssignCase": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Case"
        }
      }
    },
    "CaseCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Case"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseCashSale": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CashSale"
        }
      }
    },
    "CashSaleCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CashSale"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "ApproveChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "RejectChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "EmailChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "ReverseChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "HoldChangeOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "RemoveChangeOrderFromHold": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        }
      }
    },
    "ChangeOrderCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ChangeOrderClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ChangeOrderClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseCheck": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Check"
        }
      }
    },
    "VoidCheck": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Check"
        }
      }
    },
    "CheckCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Check"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompaniesStructureCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CompaniesStructure"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompanyFinancialPeriodCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CompanyFinancialPeriod"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CheckForContactDuplicates": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "MarkContactAsValidated": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "ValidateContactAddress": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "CreateAccountFromContact": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Contact"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ContactCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Contact"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ContractUsageCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ContractUsage"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ChangeCostCodeID": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CostCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "CostCodeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "CostCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CostCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CurrencyCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Currency"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CreateContactFromCustomer": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Customer"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "CustomerCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Customer"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CustomerClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CustomerClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CustomerLocationCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CustomerLocation"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CustomerPaymentMethodCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CustomerPaymentMethod"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CustomerPriceClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CustomerPriceClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "DeductionBenefitCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DeductionBenefitCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "UpdateDiscounts": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Discount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "Date": {
              "$ref": "#/definitions/DateTimeValue"
            }
          }
        }
      }
    },
    "DiscountCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Discount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "DiscountCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DiscountCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "EarningTypeCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EarningTypeCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "SendEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateContactFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateEventFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateLeadFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateOpportunityFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateExpenseReceiptFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateCaseFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CreateTaskFromEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "RestoreDeletedEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "RestoreArchivedEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "ProcessEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "CancelSendingEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "ArchiveEmail": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "EmailCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Email"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ProcessEmailProcessing": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmailProcessing"
        }
      }
    },
    "ProcessAllEmailProcessing": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmailProcessing"
        }
      }
    },
    "EmailProcessingCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmailProcessing"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ChangeEmployeeID": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Employee"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "EmployeeID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "EmployeeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Employee"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "EmployeePayrollClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmployeePayrollClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ImportEmployeeTaxes": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmployeePayrollSettings"
        }
      }
    },
    "EmployeePayrollSettingsCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EmployeePayrollSettings"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "AcceptInvitationEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "CancelActivityEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "CompleteEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "ExportCardEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "RejectInvitationEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "InviteAllEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "InviteEvent": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "EventCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ApproveExpenseClaim": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        }
      }
    },
    "RejectExpenseClaim": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        }
      }
    },
    "SubmitExpenseClaim": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        }
      }
    },
    "ReleaseExpenseClaim": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        }
      }
    },
    "PutOnHoldExpenseClaim": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        }
      }
    },
    "ExpenseClaimCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseClaim"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "SubmitExpenseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        }
      }
    },
    "ApproveExpenseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        }
      }
    },
    "RejectExpenseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        }
      }
    },
    "PutOnHoldExpenseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        }
      }
    },
    "ClaimExpenseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        }
      }
    },
    "ExpenseReceiptCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExpenseReceipt"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ExternalCommitmentCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ExternalCommitment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "FinancialPeriodCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FinancialPeriod"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "FinancialYearCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FinancialYear"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "FOBPointCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FOBPoint"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseAdjustment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryAdjustment"
        }
      }
    },
    "InventoryAdjustmentCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryAdjustment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "InventoryAllocationInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryAllocationInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseInventoryIssue": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryIssue"
        }
      }
    },
    "InventoryIssueCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryIssue"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "InventoryQuantityAvailableCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryQuantityAvailable"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseInventoryReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryReceipt"
        }
      }
    },
    "InventoryReceiptCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventoryReceipt"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "InventorySummaryInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/InventorySummaryInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Invoice"
        }
      }
    },
    "InvoiceCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Invoice"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ItemClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ItemClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ItemSalesCategoryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ItemSalesCategory"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ItemWarehouseCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ItemWarehouse"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseJournalTransaction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/JournalTransaction"
        }
      }
    },
    "JournalTransactionCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/JournalTransaction"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseKitAssembly": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/KitAssembly"
        }
      }
    },
    "KitAssemblyCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/KitAssembly"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "KitSpecificationCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/KitSpecification"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "LaborCostRateCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/LaborCostRate"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CheckLeadForDuplicates": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        }
      }
    },
    "ConvertLeadToBAccount": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ConvertLeadToContact": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ConvertLeadToOpportunity": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountClass": {
              "$ref": "#/definitions/StringValue"
            },
            "OpportunitySubject": {
              "$ref": "#/definitions/StringValue"
            },
            "OpportunityCloseDate": {
              "$ref": "#/definitions/StringValue"
            },
            "OpportunityClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ValidateLeadAddress": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        }
      }
    },
    "MarkLeadAsValidated": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        }
      }
    },
    "LeadCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Lead"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "LedgerCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Ledger"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "LotSerialClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/LotSerialClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "UpdateStandardCostNonStockItem": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/NonStockItem"
        }
      }
    },
    "NonStockItemCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/NonStockItem"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "Release": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ODFournisseurs"
        }
      }
    },
    "ODFournisseursCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ODFournisseurs"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CreateContactFromOpportunity": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Opportunity"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "CreateOpportunityInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Opportunity"
        }
      }
    },
    "CreateOpportunitySalesOrder": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Opportunity"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "OrderType": {
              "$ref": "#/definitions/StringValue"
            },
            "RecalculatePricesandDiscounts": {
              "$ref": "#/definitions/BooleanValue"
            }
          }
        }
      }
    },
    "CreateAccountFromOpportunity": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Opportunity"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "AccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            },
            "LinkContactToAccount": {
              "$ref": "#/definitions/BooleanValue"
            },
            "BusinessAccountID": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountName": {
              "$ref": "#/definitions/StringValue"
            },
            "BusinessAccountClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "OpportunityCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Opportunity"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PayGroupCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayGroup"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CaptureCreditCardPayment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        }
      }
    },
    "ReleasePayment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        }
      }
    },
    "VoidPayment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        }
      }
    },
    "VoidCardPayment": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "TranType": {
              "$ref": "#/definitions/StringValue"
            },
            "TranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtProfileId": {
              "$ref": "#/definitions/StringValue"
            },
            "TranDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "NeedValidation": {
              "$ref": "#/definitions/BooleanValue"
            },
            "OrigTranNbr": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "CardOperation": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "TranType": {
              "$ref": "#/definitions/StringValue"
            },
            "TranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "AuthNumber": {
              "$ref": "#/definitions/StringValue"
            },
            "ExtProfileId": {
              "$ref": "#/definitions/StringValue"
            },
            "TranDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "OrigTranNbr": {
              "$ref": "#/definitions/StringValue"
            },
            "Amount": {
              "$ref": "#/definitions/DecimalValue"
            }
          }
        }
      }
    },
    "PaymentCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Payment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PaymentMethodCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PayPeriodCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayPeriod"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseBatch": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayrollBatch"
        }
      }
    },
    "PayrollBatchCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayrollBatch"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PayrollUnionLocalCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayrollUnionLocal"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PayrollWCCCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PayrollWCCCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PhysicalInventoryCountCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PhysicalInventoryCount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CancelPhysicalInventory": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PhysicalInventoryReview"
        }
      }
    },
    "CompletePhysicalInventory": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PhysicalInventoryReview"
        }
      }
    },
    "FinishCountingPhysicalInventory": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PhysicalInventoryReview"
        }
      }
    },
    "PhysicalInventoryReviewCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PhysicalInventoryReview"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseProFormaInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "ApproveProFormaInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "RejectProFormaInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "EmailProFormaInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "HoldProFormaInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "RemoveProFormaInvoiceFromHold": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        }
      }
    },
    "ProFormaInvoiceCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProFormaInvoice"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "RunProjectAllocation": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ValidateProjectBalance": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "RunProjectBilling": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ApproveProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "RejectProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "LockProjectBudget": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "UnlockProjectBudget": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "LockProjectCommitments": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "UnlockProjectCommitments": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ChangeProjectID": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "ProjectID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "ActivateProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "HoldProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "CompleteProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "SuspendProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "CancelProject": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ProjectCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Project"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ProjectBudgetCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectBudget"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ActivateProjectTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTask"
        }
      }
    },
    "CompleteProjectTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTask"
        }
      }
    },
    "CancelProjectTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTask"
        }
      }
    },
    "HoldProjectTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTask"
        }
      }
    },
    "ProjectTaskCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTask"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ActivateProjectTemplate": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTemplate"
        }
      }
    },
    "HoldProjectTemplate": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTemplate"
        }
      }
    },
    "ProjectTemplateCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTemplate"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ProjectTemplateTaskCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTemplateTask"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseTransactions": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTransaction"
        }
      }
    },
    "ProjectTransactionCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ProjectTransaction"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PTOBankCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PTOBank"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "PurchaseOrderCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PurchaseOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleasePurchaseReceipt": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PurchaseReceipt"
        }
      }
    },
    "CreateAPBill": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PurchaseReceipt"
        }
      }
    },
    "PurchaseReceiptCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PurchaseReceipt"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseSalesInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesInvoice"
        }
      }
    },
    "SalesInvoiceCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesInvoice"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CancelSalesOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "ReopenSalesOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "PrepareSalesInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "OpenSalesOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "ReleaseFromCreditHoldSalesOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "SalesOrderCreateReceipt": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "ShipmentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "SalesOrderCreateShipment": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "ShipmentDate": {
              "$ref": "#/definitions/DateTimeValue"
            },
            "WarehouseID": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "AutoRecalculateDiscounts": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        }
      }
    },
    "SalesOrderCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "SalespersonCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Salesperson"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "SalesPricesInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesPricesInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseSalesPriceWorksheet": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesPriceWorksheet"
        }
      }
    },
    "SalesPriceWorksheetCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/SalesPriceWorksheet"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompleteOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "CancelOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ReopenOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "CloseOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "UncloseOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "InvoiceOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "AllowBilling": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "RecalcExternalTax": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ServiceOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ConfirmShipment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Shipment"
        }
      }
    },
    "CorrectShipment": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Shipment"
        }
      }
    },
    "UpdateIN": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Shipment"
        }
      }
    },
    "PrepareInvoice": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Shipment"
        }
      }
    },
    "ShipmentCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Shipment"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ShippingBoxCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ShippingBox"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ShippingTermCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ShippingTerm"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ShippingZonesCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ShippingZones"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ShipViaCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ShipVia"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ShopifyStoreCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ShopifyStore"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "StatementCycleCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/StatementCycle"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "UpdateStandardCostStockItem": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/StockItem"
        }
      }
    },
    "StockItemCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/StockItem"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "StorageDetailsByLocationInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/StorageDetailsByLocationInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "StorageDetailsInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/StorageDetailsInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "SubaccountCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Subaccount"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseFromHold": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Subcontract"
        }
      }
    },
    "PutOnHold": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Subcontract"
        }
      }
    },
    "SubcontractCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Subcontract"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompleteTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "CancelActivityTask": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "TaskCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Task"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "TaxCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Tax"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "TaxCategoryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TaxCategory"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "TaxReportingSettingsCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TaxReportingSettings"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "TaxZoneCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TaxZone"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "TemplateItemsCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TemplateItems"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CompleteTimeEntry": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TimeEntry"
        }
      }
    },
    "OpenTimeEntry": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TimeEntry"
        }
      }
    },
    "TimeEntryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TimeEntry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseTransferOrder": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TransferOrder"
        }
      }
    },
    "TransferOrderCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TransferOrder"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "UnionLocalCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/UnionLocal"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "UnitsOfMeasureCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/UnitsOfMeasure"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "CreateContactFromVendor": {
      "required": [
        "entity",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Vendor"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "FirstName": {
              "$ref": "#/definitions/StringValue"
            },
            "LastName": {
              "$ref": "#/definitions/StringValue"
            },
            "JobTitle": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone1": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2Type": {
              "$ref": "#/definitions/StringValue"
            },
            "Phone2": {
              "$ref": "#/definitions/StringValue"
            },
            "Email": {
              "$ref": "#/definitions/StringValue"
            },
            "ContactClass": {
              "$ref": "#/definitions/StringValue"
            }
          }
        }
      }
    },
    "VendorCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Vendor"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "VendorClassCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/VendorClass"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "VendorPricesInquiryCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/VendorPricesInquiry"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "ReleaseVendorPriceWorksheet": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/VendorPriceWorksheet"
        }
      }
    },
    "VendorPriceWorksheetCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/VendorPriceWorksheet"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "WarehouseCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Warehouse"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "WorkCalendarCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/WorkCalendar"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "WorkClassCompensationCodeCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/WorkClassCompensationCode"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "WorkLocationCustomAction": {
      "required": [
        "entity"
      ],
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/WorkLocation"
        },
        "parameters": {
          "description": "The parameters of the action.",
          "type": "object",
          "properties": {
            "custom": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/CustomField"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Plan comptable (GL202500)"
    },
    {
      "name": "AccountDetailsForPeriodInquiry",
      "description": "Account Details for Period (GL404001)"
    },
    {
      "name": "AccountGroup",
      "description": "Regroupements de comptes (PM201000)"
    },
    {
      "name": "AccountSummaryInquiry",
      "description": "Solde des comptes (GL401000)"
    },
    {
      "name": "Activity",
      "description": "Activité (CR306010)"
    },
    {
      "name": "Appointment",
      "description": "Interventions (FS300200)"
    },
    {
      "name": "AttributeDefinition",
      "description": "Attributs de personnalisation (CS205000)"
    },
    {
      "name": "BigCommerceStores",
      "description": "(BC201000)"
    },
    {
      "name": "Bill",
      "description": "Factures et Ajustements (AP301000)"
    },
    {
      "name": "Budget",
      "description": "Saisir les budgets (GL302010)"
    },
    {
      "name": "BusinessAccount",
      "description": "Comptes tiers (CR303000)"
    },
    {
      "name": "Carrier",
      "description": "(CS207700)"
    },
    {
      "name": "Case",
      "description": "Tickets (CR306000)"
    },
    {
      "name": "CashSale",
      "description": "Ventes au comptant (AR304000)"
    },
    {
      "name": "ChangeOrder",
      "description": "Avenants (PM308000)"
    },
    {
      "name": "ChangeOrderClass",
      "description": "Familles d'avenants (PM203000)"
    },
    {
      "name": "Check",
      "description": "Règlements fournisseurs (AP302000)"
    },
    {
      "name": "CompaniesStructure",
      "description": "Company Branch (CS401000)"
    },
    {
      "name": "CompanyFinancialPeriod",
      "description": "Calendrier comptable des sociétés (GL201100)"
    },
    {
      "name": "Contact",
      "description": "Contacts (CR302000)"
    },
    {
      "name": "ContractUsage",
      "description": "Consommation du contrat (CT303000)"
    },
    {
      "name": "CostCode",
      "description": "(PM209500)"
    },
    {
      "name": "Currency",
      "description": "Devises (CM202000)"
    },
    {
      "name": "Customer",
      "description": "Clients (AR303000)"
    },
    {
      "name": "CustomerClass",
      "description": "Familles de clients (AR201000)"
    },
    {
      "name": "CustomerLocation",
      "description": "Adresses clients (AR303020)"
    },
    {
      "name": "CustomerPaymentMethod",
      "description": "Modes de règlement clients (AR303010)"
    },
    {
      "name": "CustomerPriceClass",
      "description": "Familles de tarifs clients (AR208000)"
    },
    {
      "name": "DeductionBenefitCode",
      "description": "(PR101060)"
    },
    {
      "name": "Discount",
      "description": "Remises clients (AR209500)"
    },
    {
      "name": "DiscountCode",
      "description": "Codes remises (AR209000)"
    },
    {
      "name": "EarningTypeCode",
      "description": "(PR102000)"
    },
    {
      "name": "Email",
      "description": "Courriel (CR306015)"
    },
    {
      "name": "EmailProcessing",
      "description": "Courriels en attente de traitement (SM507000)"
    },
    {
      "name": "Employee",
      "description": "Salariés/Ressources (EP203000)"
    },
    {
      "name": "EmployeePayrollClass",
      "description": "(PR202000)"
    },
    {
      "name": "EmployeePayrollSettings",
      "description": "(PR203000)"
    },
    {
      "name": "Event",
      "description": "Événement (CR306030)"
    },
    {
      "name": "ExpenseClaim",
      "description": "(EP301000)"
    },
    {
      "name": "ExpenseReceipt",
      "description": "(EP301020)"
    },
    {
      "name": "ExternalCommitment",
      "description": "Engagements externes (PM209000)"
    },
    {
      "name": "FinancialPeriod",
      "description": "Calendrier comptable principal (GL201000)"
    },
    {
      "name": "FinancialYear",
      "description": "Exercice fiscal (GL101000)"
    },
    {
      "name": "FOBPoint",
      "description": "Points FOB (CS208500)"
    },
    {
      "name": "InventoryAdjustment",
      "description": "Ajustements (IN303000)"
    },
    {
      "name": "InventoryAllocationInquiry",
      "description": "Détail des allocations de stock (IN402000)"
    },
    {
      "name": "InventoryIssue",
      "description": "Sorties de stock (IN302000)"
    },
    {
      "name": "InventoryQuantityAvailable",
      "description": "Available Quantity by Inventory Item (GI640590)"
    },
    {
      "name": "InventoryReceipt",
      "description": "Entrées de stock (IN301000)"
    },
    {
      "name": "InventorySummaryInquiry",
      "description": "État du stock (IN401000)"
    },
    {
      "name": "Invoice",
      "description": "Factures, Avoirs et Ajustements (AR301000)"
    },
    {
      "name": "ItemClass",
      "description": "Familles d'articles (IN201000)"
    },
    {
      "name": "ItemSalesCategory",
      "description": "Catalogue articles (IN204060)"
    },
    {
      "name": "ItemWarehouse",
      "description": "Informations article/entrepôt (IN204500)"
    },
    {
      "name": "JournalTransaction",
      "description": "Écritures (GL301000)"
    },
    {
      "name": "KitAssembly",
      "description": "Assemblages (IN307000)"
    },
    {
      "name": "KitSpecification",
      "description": "Nomenclatures d'assemblage (IN209500)"
    },
    {
      "name": "LaborCostRate",
      "description": "Taux de main d'oeuvre (PM209900)"
    },
    {
      "name": "Lead",
      "description": "Suspects (CR301000)"
    },
    {
      "name": "Ledger",
      "description": "Journaux (GL201500)"
    },
    {
      "name": "LotSerialClass",
      "description": "Familles de lots/séries (IN207000)"
    },
    {
      "name": "NonStockItem",
      "description": "Articles non stockés (IN202000)"
    },
    {
      "name": "ODFournisseurs",
      "description": "OD Fournisseurs (AP30CG00)"
    },
    {
      "name": "Opportunity",
      "description": "Opportunités (CR304000)"
    },
    {
      "name": "PayGroup",
      "description": "(PR205000)"
    },
    {
      "name": "Payment",
      "description": "Règlements clients (AR302000)"
    },
    {
      "name": "PaymentMethod",
      "description": "Modes de règlement (CA204000)"
    },
    {
      "name": "PayPeriod",
      "description": "(PR201000)"
    },
    {
      "name": "PayrollBatch",
      "description": "(PR301000)"
    },
    {
      "name": "PayrollUnionLocal",
      "description": "(PR209700)"
    },
    {
      "name": "PayrollWCCCode",
      "description": "(PR209800)"
    },
    {
      "name": "PhysicalInventoryCount",
      "description": "Saisie d'inventaire physique (IN305010)"
    },
    {
      "name": "PhysicalInventoryReview",
      "description": "Suivi/Validation d'inventaire physique (IN305000)"
    },
    {
      "name": "ProFormaInvoice",
      "description": "Préfactures (PM307000)"
    },
    {
      "name": "Project",
      "description": "Affaires (PM301000)"
    },
    {
      "name": "ProjectBudget",
      "description": "Budget par affaire (PM309000)"
    },
    {
      "name": "ProjectTask",
      "description": "Phases projet (PM302000)"
    },
    {
      "name": "ProjectTemplate",
      "description": "Modèles d'affaires (PM208000)"
    },
    {
      "name": "ProjectTemplateTask",
      "description": "Modèles de phase projet (PM208010)"
    },
    {
      "name": "ProjectTransaction",
      "description": "Transactions par affaire (PM304000)"
    },
    {
      "name": "PTOBank",
      "description": "(PR204000)"
    },
    {
      "name": "PurchaseOrder",
      "description": "Achats (PO301000)"
    },
    {
      "name": "PurchaseReceipt",
      "description": "Réceptions (PO302000)"
    },
    {
      "name": "SalesInvoice",
      "description": "Factures (SO303000)"
    },
    {
      "name": "SalesOrder",
      "description": "Commandes et Devis (SO301000)"
    },
    {
      "name": "Salesperson",
      "description": "Commerciaux (AR205000)"
    },
    {
      "name": "SalesPricesInquiry",
      "description": "Prix de vente (AR202000)"
    },
    {
      "name": "SalesPriceWorksheet",
      "description": "Grilles des tarifs clients (AR202010)"
    },
    {
      "name": "ServiceOrder",
      "description": "Ordres de service (FS300100)"
    },
    {
      "name": "Shipment",
      "description": "Expéditions (SO302000)"
    },
    {
      "name": "ShippingBox",
      "description": "Colisage (CS207600)"
    },
    {
      "name": "ShippingTerm",
      "description": "Conditions d'expédition (CS208000)"
    },
    {
      "name": "ShippingZones",
      "description": "Zones d'expédition (CS207510)"
    },
    {
      "name": "ShipVia",
      "description": "Modes d'expédition (CS207500)"
    },
    {
      "name": "ShopifyStore",
      "description": "(BC201010)"
    },
    {
      "name": "StatementCycle",
      "description": "Cycles de relevé (AR202800)"
    },
    {
      "name": "StockItem",
      "description": "Articles stockés (IN202500)"
    },
    {
      "name": "StorageDetailsByLocationInquiry",
      "description": "Storage Details by Item Warehouse Location (IN408055)"
    },
    {
      "name": "StorageDetailsInquiry",
      "description": "Storage Details (IN408050)"
    },
    {
      "name": "Subaccount",
      "description": "Sections analytiques (GL203000)"
    },
    {
      "name": "Subcontract",
      "description": "(SC301000)"
    },
    {
      "name": "Task",
      "description": "Tâche (CR306020)"
    },
    {
      "name": "Tax",
      "description": "Taxes (TX205000)"
    },
    {
      "name": "TaxCategory",
      "description": "Catégories de taxes (TX205500)"
    },
    {
      "name": "TaxReportingSettings",
      "description": "États préparatoires - Lignes (TX205100)"
    },
    {
      "name": "TaxZone",
      "description": "Zones de taxes (TX206000)"
    },
    {
      "name": "TemplateItems",
      "description": "Modèles d'articles dimensionnés (IN203000)"
    },
    {
      "name": "TimeEntry",
      "description": "Time Entry (PM209100)"
    },
    {
      "name": "TransferOrder",
      "description": "Transferts (IN304000)"
    },
    {
      "name": "UnionLocal",
      "description": "(PM209700)"
    },
    {
      "name": "UnitsOfMeasure",
      "description": "Unités de mesure (CS203100)"
    },
    {
      "name": "Vendor",
      "description": "Fournisseurs (AP303000)"
    },
    {
      "name": "VendorClass",
      "description": "Familles de Fournisseurs (AP201000)"
    },
    {
      "name": "VendorPricesInquiry",
      "description": "Prix fournisseurs (AP202000)"
    },
    {
      "name": "VendorPriceWorksheet",
      "description": "Grilles des tarifs fournisseurs (AP202010)"
    },
    {
      "name": "Warehouse",
      "description": "Entrepôts (IN204000)"
    },
    {
      "name": "WorkCalendar",
      "description": "Calendrier de travail (CS209000)"
    },
    {
      "name": "WorkClassCompensationCode",
      "description": "(PM209800)"
    },
    {
      "name": "WorkLocation",
      "description": "(PR101040)"
    }
  ]
}